@{
    ViewBag.Title = "User Setup";
    Layout = "~/Views/Shared/_Masterpage.cshtml";
    ViewBag.IsLoadKendo = true;
    @using Newtonsoft.Json
}

<link rel="stylesheet" type="text/css" href="~/css/select2.min.css?ID=@ViewBag.GUID">

<style>

    #dynamic-modal5 table thead tr th {
        background: #358468;
        color: #fff;
    }

    #tblUserAppHubAccess {
        display: none; /* Initially hide the div */
    }

    .tabs-container #tab3:checked ~ #content3,
    .tabs-container #tab2:checked ~ #content2,
    .tabs-container #tab1:checked ~ #content1 {
        display: block;
    }

    .k-grid-content {
        width: 100%;
        min-height: 0;
        overflow: auto;
        overflow-x: auto;
        overflow-y: auto !important;
        position: relative;
        flex: 1;
    }

    .k-grid-header {
        padding-right: 0px !important;
    }

    .k-grid-filter-menu.k-grid-header-menu {
        color: white;
    }

    thead.k-table-thead tr.k-table-row {
        background: rgb(20, 61, 102);
        color: white;
    }

    .k-button-flat-primary {
        color: black;
    }

    .grid-header a {
        color: white;
    }

    .minWidth {
        width: 300px;
    }

    .hidecolumn {
        display: none !important;
    }

    .select2 {
        width: 100% !important;
    }

    .table > :not(caption) > * > * {
        background-image: none !important; /* Set to none or whatever you prefer */
    }

    #Tariff .table > :not(caption) > * > * {
        background-image: linear-gradient(var(--your-custom-bg), var(--your-custom-bg)) !important;
    }

    .no-match {
        border: 3px solid red;
    }

    .hidden-column {
        display: none !important; /* Make the column visible */
        /* Optionally, you can adjust width or any other styles as needed */
    }

    .pageWidth {
        width: 97%;
    }

    body.modal-open {
        position: fixed;
    }

    /*select2 Start*/
    .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
        font-size: medium;
        color: #2cabe3;
        cursor: pointer;
        display: inline-block;
        font-weight: bold;
        margin-right: 5px;
    }

    .select2-container--classic .select2-selection--multiple .select2-selection__choice, .select2-container--default .select2-selection--multiple .select2-selection__choice, .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
        background-color: transparent;
        border-color: #2cabe3;
        color: black
    }

    .select2-container--default.select2-container--focus .select2-selection--multiple {
        border: 1px solid #2cabe3;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        color: #444;
        line-height: 26px;
        width: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        padding-right: 0px;
    }

    .select2-container--default .select2-selection--multiple {
        line-height: 27px;
        height: auto;
        padding-top: 12px;
    }

    /* #ApplicationAccess + .select2.select2-container .select2-selection.select2-selection--multiple {
                                    border-color: #2cabe3;
                                } */


    .centertablerow {
        text-align: left;
        vertical-align: top; /* Center items horizontally */
    }

    .hidetr {
        display: none !important;
    }

    .nodatatr {
        display: none !important;
    }


    /* Custom Select */
    .myselect {
        position: relative;
    }

        .myselect select {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            padding: 10px;
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            border-radius: 5px;
            cursor: pointer;
            outline: none;
            font-size: 11px; /* Initial font size */
        }

        /* Custom Select Arrow */
        .myselect::after {
            content: '\25BE'; /* Unicode character for down arrow */
            font-size: 20px; /* Initial font size of the arrow */
            position: absolute;
            color: #888;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            pointer-events: none;
        }

        /* Custom Select Focus Style */
        .myselect select:focus {
            border-color: #6c757d;
        }

    .centercheckbox {
        text-align: center;
    }

    .childtable {
        max-width: 96%;
        margin: auto;
    }

    .addbutton {
        margin-left: 0px;
        padding-right: 7%;
    }

    .navusername {
        display: none !important;
    }




    .search_container {
        padding-top: 26px;
    }

    .search_input {
        width: 55%;
        padding: 12px 24px;
        background-color: transparent;
        transition: transform 250ms ease-in-out;
        font-size: 14px;
        line-height: 18px;
        color: #575756;
        background-color: transparent;
        background-repeat: no-repeat;
        background-size: 18px 18px;
        background-position: 95% center;
        border-radius: 60px;
        border: solid 1px #ccc;
        transition: all 250ms ease-in-out;
        backface-visibility: hidden;
        transform-style: preserve-3d;
        color: #575756;
        background-image: url('/img/SearchUserName.PNG');
    }

        .search_input::placeholder {
            color: rgba(87, 87, 86, 0.8);
            text-transform: uppercase;
            letter-spacing: 1.5px;
        }

        .search_input:hover,
        .search_input:focus {
            padding: 12px 0;
            outline: 0;
            border: 1px solid transparent;
            border-bottom: 1px solid #575756;
            border-radius: 0;
            background-position: 100% center;
        }

    .search-icon {
        position: absolute;
        top: 50%;
        right: 20px;
        transform: translateY(-50%);
    }

        .search-icon i {
            color: #575756;
        }

    .scrollable {
        max-height: 200px;
        overflow: hidden;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .username-popup {
        list-style-type: none;
        padding: 0;
        margin: 0;
        background-color: #fff;
        border: 1px solid #ccc;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        position: absolute;
        z-index: 999;
        width: 36%;
        border: none;
    }

        .username-popup li {
            padding: 8px 12px;
            cursor: pointer;
        }

            .username-popup li:hover {
                background-color: #f0f0f0;
            }

    .iconstyle {
        font-size: 16px;
        padding: 0px;
        font-weight: 600;
        cursor: pointer;
    }

    .paddingzero {
        padding-left: 1px;
        padding-right: 1px;
        margin-left: 4px;
    }

    #tblUserAppHubAccess {
        margin: 0 auto;
    }

        #tblUserAppHubAccess .table-responsive {
            overflow-x: hidden;
        }

        #tblUserAppHubAccess .table {
            width: 100%;
            margin: 0 auto;
            border-collapse: collapse;
        }

            #tblUserAppHubAccess .table th, #tblUserAppHubAccess .table td {
                text-align: center;
                vertical-align: middle;
                padding: 10px;
            }

            #tblUserAppHubAccess .table thead th {
                background-color: #f8f9fa;
            }



        #tblUserAppHubAccess input[type="checkbox"] {
            display: flex;
            align-items: center;
            justify-content: center;
        }

    .modal-dialog-scrollable .modal-body {
        overflow-x: hidden;
    }
</style>


<!--Wrapper Start -->
<div class="container-fluid pt-4 pb-4 ps-1 pe-1 bg-white rounded">

    <div class="logo text-center border-bottom">
        <h3 class="box-title mb-3">User Setup</h3>
    </div>

    @Html.Hidden("RightsList", (object)ViewBag.RightsList)
    @Html.Hidden("UserTypeList", (object)ViewBag.UserTypeList)
    @Html.Hidden("DepartmentList", (object)ViewBag.DepartmentList)
    @Html.Hidden("QuestionList", (object)ViewBag.QuestionList)
    @Html.Hidden("BlockList", (object)ViewBag.BlockList)
    @Html.Hidden("TimeZoneList", (object)ViewBag.TimeZoneList)
    @Html.Hidden("RolesList", (object)ViewBag.RolesList)
    @Html.Hidden("ApplicationAccessList", (object)ViewBag.ApplicationAccessList)
    @Html.Hidden("HubAccessList", (object)ViewBag.HubAccessList)

    <div class="row tabs-container">
        <div class="col-lg-12 col-md-12 col-sm-12 tab-content" id="mainUserSetup">
            @if (ViewBag.RightsListObj.IsView)
            {
                <input id="tab1" type="radio" name="tabs" checked>
                <label for="tab1" class="tabs-label"><i>User</i>User Information</label>
                <input id="tab2" type="radio" name="tabs">
                <label for="tab2" class="tabs-label"><i>UAA</i>User Application Access</label>
                <input id="tab3" type="radio" name="tabs">
                <label for="tab3" class="tabs-label"><i>UAHA</i>User Application Hub Access</label>
            }
            <section id="content1">
                <div class="row">
                    <div class="col-lg-12" style="font-size:0.75em" id="tablerecord">
                        <div class="w-100 text-right">
                            <div class="button-group">
                                <button type="button" class="btn btn-lg px-4 fs-4 font-weight-medium Theme-button" style="display: none" id="usersetupmodalbutton" onclick="GetAddEditUserSetupModal('','Add');">+ Add New User</button>
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel box box-info">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            <div id="grid"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section id="content2">
                <div class="row">
                    <div class="col-lg-12" style="font-size:0.75em" id="tablerecord">
                        <div class="w-100 text-right">
                            <div class="button-group">
                                <button type="button" class="btn btn-lg px-4 fs-4 font-weight-medium Theme-button" style="display: none" id="User_Application_Access_Btn" onclick="GetAddEditUserApplicationAccessModal('');">+ Add New User Application Access</button>
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel box box-info">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            <div id="grid1"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section id="content3">
                <div class="row">
                    <div class="col-lg-12" style="font-size:0.75em" id="tablerecord">
                        <div class="w-100 text-right">
                            <div class="button-group">
                                <button type="button" class="btn btn-lg px-4 fs-4 font-weight-medium Theme-button" style="display: none" id="User_Application_Hub_Access_Btn" onclick="GetAddEditUserApplicationHubAccessModal('','');">+ Add New User Application Hub Access</button>
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="panel box box-info">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            <div id="grid2"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>

</div>
<!--Wrapper End -->
<!--User Form Modal Start-->
<div class="modal fade pageWidth" id="User_Form_Modal" tabindex="-1" aria-labelledby="User_Form_Label" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-fullscreen" style="margin-left:2%;">
        <div class="modal-content">
            <div class="modal-header modal-colored-header Theme-Header">
                <h3 class="modal-title" id="User_Form_Title">Add User Form</h3>

                <button type="button" class="btn-close Theme-button" data-bs-dismiss="modal" aria-label="Close" style="margin-right: 5%;" onclick="closeAndResetModal()"></button>
            </div>
            <div class="modal-body" style="max-height:max-content; overflow: hidden; overflow-x: hidden; overflow-y: auto;">

                <div class="row justify-content-center">
                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-3">
                        <div class="form-item">
                            <select id="selectUserType" class="control-select form-control" type="text" onchange="SellerFormShowHide(this.value)" style="margin-top:3%;" required>
                                @{
                                    <option value="" selected="selected">[Select Option]</option>
                                    for (int i = 0; i < ViewBag.UserTypeDT.Rows.Count; i++)
                                    {
                                        <option value="@ViewBag.UserTypeDT.Rows[i]["value"].ToString()">@ViewBag.UserTypeDT.Rows[i]["text"].ToString()</option>
                                    }
                                }
                            </select>
                            <label class="control-label" for="selectCtrl">User Type</label>
                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                        <div class="search_container">
                            <input class="search_input" type="text" id="search" placeholder="Search UserName" autocomplete="off">
                            <div id="username-list" class="username-popup"></div>

                        </div>
                    </div>

                </div>

                <div class="accordion-container pageWidth">
                    <div class="col-12 mb-3" style="width:98%">
                        <div class="accordion-item">
                            <div class="accordion-item-header active">
                                User Detail
                            </div>

                            <div class="accordion-item-body " style="max-height:max-content; overflow: hidden; overflow-x: hidden; overflow-y: auto;">

                                <div class="row justify-content-center p-3">

                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text1" id="txtUserName" autocomplete="off">
                                            <label class="control-label" for="txtUserName">User Name <span class="requiredField">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3 passContainer">
                                        <div class="form-item">
                                            <input class="control-input" type="password1" id="txtPassword" autocomplete="off">
                                            <label class="control-label" for="txtPassword">Password <span class="requiredField">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3 confirmPassContainer">
                                        <div class="form-item" id="confirmPasswordContainer">
                                            <input class="control-input" type="password1" id="txtConfirmPassword" autocomplete="off">
                                            <label class="control-label" for="txtConfirmPassword">Confirm Password <span class="requiredField">*</span></label>
                                        </div>
                                    </div>

                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtDesignation" autocomplete="off">
                                            <label class="control-label" for="txtCompany">Designation <span class="requiredField">*</span></label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row justify-content-center p-3">
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtFirstName" autocomplete="off">
                                            <label class="control-label" for="txtFirstName">First Name</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtMiddleName" autocomplete="off">
                                            <label class="control-label" for="txtMiddleName">Middle Name</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtLastName" autocomplete="off">
                                            <label class="control-label" for="txtLastName">Last Name</label>
                                        </div>
                                    </div>

                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtCompany" autocomplete="off">
                                            <label class="control-label" for="txtCompany">Company</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row justify-content-center p-3">



                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <select id="ApplicationAccess" class="control-select form-control " required onchange="ShowNavTextBox()" data-placeholder="Choose anything" multiple>
                                                @{
                                                    // <option value="" selected="selected">[Select Option]</option>
                                                    for (int i = 0; i < ViewBag.ApplicationAccessDT.Rows.Count; i++)
                                                    {

                                                        <option value="@ViewBag.ApplicationAccessDT.Rows[i]["value"].ToString()">@ViewBag.ApplicationAccessDT.Rows[i]["text"].ToString()</option>
                                                    }
                                                }
                                            </select>

                                            <label class="control-label" for="ApplicationAccess"> User Application Access </label>


                                        </div>

                                        <div id="ApplicationHiddenMainDiv" class="hidden-column">
                                            <div id="UAA_ID_0" class="hidden-column ApplicationAceesForUAAID"></div>
                                        </div>


                                        <div class="form-item navusername" id="texNavTextBox">
                                            <input type="text" id="texNav" class="control-input" placeholder="Enter Nav user name">
                                            <label class="control-label" for="texNav">Enter Nav User Name <span class="requiredField">*</span></label>
                                        </div>
                                    </div>

                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <select id="Department" class="control-select form-control" type="text" required>
                                                @{
                                                    <option value="" selected="selected">[Select Option]</option>
                                                    for (int i = 0; i < ViewBag.DepartmentDT.Rows.Count; i++)
                                                    {
                                                        <option value="@ViewBag.DepartmentDT.Rows[i]["value"].ToString()">@ViewBag.DepartmentDT.Rows[i]["text"].ToString()</option>
                                                    }
                                                }
                                            </select>
                                            <label class="control-label" for="selectCtrl">Department <span class="requiredField">*</span></label>
                                        </div>
                                    </div>


                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <select id="Role" class="control-select form-control" type="text" required>
                                                @{
                                                    <option value="" selected="selected">[Select Option]</option>
                                                    for (int i = 0; i < ViewBag.RolesDT.Rows.Count; i++)
                                                    {
                                                        <option value="@ViewBag.RolesDT.Rows[i]["value"].ToString()">@ViewBag.RolesDT.Rows[i]["text"].ToString()</option>
                                                    }
                                                }
                                            </select>
                                            <label class="control-label" for="selectCtrl">Roles <span class="requiredField">*</span></label>
                                        </div>
                                    </div>

                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <select id="selectTimeZone" class="control-select form-control" type="text" required>
                                                @{
                                                    <option value="" selected="selected">[Select Option]</option>
                                                    for (int i = 0; i < ViewBag.TimeZoneDT.Rows.Count; i++)
                                                    {
                                                        <option value="@ViewBag.TimeZoneDT.Rows[i]["value"].ToString()">@ViewBag.TimeZoneDT.Rows[i]["text"].ToString()</option>
                                                    }
                                                }
                                            </select>
                                            <label class="control-label" for="selectCtrl">Time Zone <span class="requiredField">*</span></label>
                                        </div>
                                    </div>


                                </div>


                                <div class="row justify-content-center p-3">
                                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <textarea rows="2" class="control-input" id="txtAddress1" autocomplete="off" style="padding-top: 12px;"></textarea>
                                            <label class="control-label" for="txtAddress1">Address 1</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <textarea rows="2" class="control-input" id="txtAddress2" autocomplete="off" style="padding-top: 12px;"></textarea>
                                            <label class="control-label" for="txtAddress2">Address 2</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row justify-content-center p-3">
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtCountry" autocomplete="off">
                                            <label class="control-label" for="txtCountry">Country</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtCity" autocomplete="off">
                                            <label class="control-label" for="txtCity">City</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtState" autocomplete="off">
                                            <label class="control-label" for="txtState">State</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="number" id="txtZipCode" autocomplete="off">
                                            <label class="control-label" for="txtZipCode">ZipCode</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row justify-content-center p-3">
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtEmail" autocomplete="off">
                                            <label class="control-label" for="txtEmail">Email <span class="requiredField">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtMobile" autocomplete="off">
                                            <label class="control-label" for="txtMobile">Mobile</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtPhone" autocomplete="off">
                                            <label class="control-label" for="txtPhone">Phone</label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="number" id="txtPhoneExt" autocomplete="off">
                                            <label class="control-label" for="txtPhoneExt">Phone Ext</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="row justify-content-center p-3">
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <select id="selectQuestion" class="control-select form-control" type="text" required>
                                                @{
                                                    <option value="" selected="selected">[Select Option]</option>
                                                    for (int i = 0; i < ViewBag.QuestionDT.Rows.Count; i++)
                                                    {
                                                        <option value="@ViewBag.QuestionDT.Rows[i]["value"].ToString()">@ViewBag.QuestionDT.Rows[i]["text"].ToString()</option>
                                                    }
                                                }
                                            </select>
                                            <label class="control-label" for="selectCtrl">Questions <span class="requiredField">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtAnswer" autocomplete="off">
                                            <label class="control-label" for="txtAnswer">Answer <span class="requiredField">*</span></label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3 hidden-column" id="SelectBlokTypeDiv">
                                        <div class="form-item">
                                            <select id="selectBlockType" class="control-select form-control" type="text" required>
                                                @{
                                                    // <option value="" selected="selected">[Select Option]</option>
                                                    for (int i = 0; i < ViewBag.BlockDT.Rows.Count; i++)
                                                    {

                                                        <option value="@ViewBag.BlockDT.Rows[i]["value"].ToString()">@ViewBag.BlockDT.Rows[i]["text"].ToString()</option>
                                                    }
                                                }
                                            </select>
                                            <label class="control-label" for="selectCtrl">Block Type <span class="requiredField">*</span></label>
                                        </div>
                                    </div>



                                    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 mb-3 hidden-column" id="UserIdDiv">
                                        <div class="form-item">
                                            <input class="control-input" type="text" id="txtUserID" autocomplete="off" readonly>
                                            <label class="control-label" for="txtUserID">User ID</label>
                                        </div>
                                    </div>

                                </div>

                                <div class="row justify-content-center p-3">
                                    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-6">
                                        <div>
                                            <label>
                                                Is Approved
                                                <input id="chkIsApproved" runat="server" type="checkbox" class=" form-check-input" checked>
                                                <span class="check"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-6">
                                        <div>
                                            <label>
                                                Is API User
                                                <input id="chkIsAPIUser" runat="server" type="checkbox" class=" form-check-input">
                                                <span class="check"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-6">
                                        <div>
                                            <label>
                                                Is Active
                                                <input id="chkIsActive" runat="server" type="checkbox" class=" form-check-input" checked>
                                                <span class="check"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="SellerForm row" style="display:none;">
                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
                            <div class="accordion-item" style="width:98%;">
                                <div id="addorhideactive" class="accordion-item-header  ">
                                    User To Seller
                                </div>
                                <div class="accordion-item-body  " style="max-height:max-content; overflow: hidden; overflow-x: hidden; overflow-y: auto;">
                                    <div class="row justify-content-center p-3">
                                        <d class="col-12 table-responsive" style="overflow: hidden; overflow-x: hidden; overflow-y: auto;">

                                            <table id="tblUserToSeller" class="table table-bordered table-striped">
                                                <thead style="background:#343a40 ;background-image: none !important;color:#fff">
                                                    <tr id="usertosellermainrow">
                                                        <th class="centertablerow">Action</th>
                                                        <th class="centertablerow">Sr.No</th>
                                                        <th class="centertablerow">Seller <span class="requiredField">*</span></th>
                                                        <th class="centertablerow">View Order</th>
                                                        <th class="centertablerow">Create Order</th>
                                                        <th class="centertablerow">Get Quote</th>
                                                        <th class="centertablerow">Financial</th>
                                                        <th class="centertablerow">Admin</th>
                                                        <th class="centertablerow">Blank Sub Seller Allowed</th>
                                                        <th class="centertablerow">All Sub Seller Allowed</th>
                                                        <th class="centertablerow">Blank Partner Allowed</th>
                                                        <th class="centertablerow">All Partner Allowed</th>
                                                        <th class="centertablerow">Blank Tariff Allowed</th>
                                                        <th class="centertablerow">All Tariff Allowed</th>
                                                        <th class="hidden-column">UTSM_ID</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr id="usertoseller_0" class="usertosellerparent_0" style="display:none; ">

                                                        <td style="width:5%;">
                                                            <span id="toggleRowsBtn_0" class="btn btn-sm arrowIcon paddingzero" onclick="toggleRow(this)">
                                                                <i class='far fa-arrow-alt-circle-down iconstyle' style=" font-size:17px; color:green;"></i>
                                                            </span>
                                                            <a id="btnUserToSelerAddNewRow_0" class="btn btn-sm btnUserToSelerAddNewRow paddingzero" onclick="AddOrEditUserSeller()"><i class="iconstyle fa fa-plus" style=" color:green"></i></a>
                                                            <a id="btnUserToSelerRemoveRow_0" class="btn btn-sm btnUserToSelerRemoveRow paddingzero" onclick="Remove_UserSellet_Row(this);">
                                                                <i class="fa iconstyle" style="color:red">&#xf00d;</i>
                                                            </a>
                                                        </td>
                                                        <td style="width: 3%;" class="text-center txtSerialNo "><span id="usertoseller-row_0" style="color: #111; font-weight: 650;">1</span></td>
                                                        <td style="width:12%">
                                                            <select id="selectSeller_0" class="form-control selectCategory getDataForJson  border-0 w-100">
                                                                <option value="">Select Option</option>
                                                                @for (int i = 0; i <= ViewBag.SellerDT.Rows.Count - 1; i++)
                                                                {
                                                                    <option value="@ViewBag.SellerDT.Rows[i]["value"].ToString()">@ViewBag.SellerDT.Rows[i]["text"].ToString()</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsViewOrder_0" type="checkbox" class=" form-check-input" checked>


                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsCreateOrder_0" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsGetQuote_0" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsFinancial_0" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsAdmin_0" type="checkbox" class=" form-check-input">


                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsBlankSubSellerAllowed_0" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsAllSubSellerAllowed_0" type="checkbox" class=" form-check-input" checked onchange="'CheckShowRelatedSection(this, 'SubSeller')')">

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsBlankPartnerAllowed_0" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsAllPartnerAllowed_0" type="checkbox" class=" form-check-input" checked onchange="CheckShowRelatedSection(this, 'Partner')">

                                                        </td>
                                                        <td style="width:8%" class="centercheckbox">

                                                            <input id="chkIsBlankTariffAllowed_0" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsAllTariffAllowed_0" type="checkbox" class=" form-check-input" checked onchange="CheckShowRelatedSection(this, 'Tariff')">

                                                        </td>
                                                        <td id="UTSM_ID_0" class="hidden-column"></td>


                                                    </tr>
                                                    <tr id="BillTo_0" class="usertosellerparent_0 nodatatr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">
                                                                Seller To Bill Mapping
                                                            </h5>

                                                            <table id="tblSellerToBillTo_0" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40  ; color:#fff">
                                                                    <tr id="billtomainrow_0">

                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th class="hidden-column">USTSBM_ID</th>
                                                                        <th>Bill TO</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>

                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SellerBillToMapping_0_BillTo_0">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSellerBillToMappingAddNewRow_0_BillTo_0" class="btn btn-sm btnSellerBillToMappingAddNewRow addbutton" onclick="AddOrEditBillTo(this)"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSellerBillToMappingRemoveRow_0" class="btn btn-sm btnSellerBillToMappingRemoveRow" onclick="Remove_BillTo_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center SBTMItxtSerialNo "><span id="SellerBillToMapping_row_0_BillTo_0" style="color: #111; font-weight: 650;">1</span></td>
                                                                        <td id="USTSBM_ID_0_BillTo_0" class="hidden-column"></td>

                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="SBTMSelectSeller_0_BillTo_0" class="form-control   selectCategory border-0 w-100">
                                                                                    <option value="2">Select Option</option>


                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsViewOrder_0_BillTo_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsCreateOrder_0_BillTo_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsGetQuote_0_BillTo_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsFinancial_0_BillTo_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>

                                                    <tr id="Partner_0" class="usertosellerparent_0 nodatatr hidetr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">
                                                                Seller To Partner Mapping
                                                            </h5>

                                                            <table id="tblSellerToPartnerMapping_0" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40 !important;color:#fff">
                                                                    <tr id="partnertomainrow_0">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th>Partner</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>

                                                                        <th class="hidden-column">USTSPM_ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SellerToPartnerMapping_0_Partner_0">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSellerToPartnerMappingAddNewRow_0_Partner_0" class="btn btn-sm btnSellerToPartnerMappingAddNewRow addbutton" onclick="AddOrEditPartnerTo(this)"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSellerToPartnerMappingRemoveRow_0" class="btn btn-sm btnSellerToPartnerMappingRemoveRow" onclick="Remove_PartnerTo_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center STPMtxtSerialNo "><span id="SellerToPartnerMapping_row_0_Partner_0" style="color: #111; font-weight: 650;">1</span></td>
                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="STPMselectSeller_0_Partner_0" class="form-control   selectCategory border-0 w-100">
                                                                                    <option value="">Select Option</option>

                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkisViewOrder_0_Partner_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkisCreateOrder_0_Partner_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkisGetQuote_0_Partner_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkIsFinancial_0_Partner_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td id="USTSPM_ID_0_Partner_0" class="hidden-column"></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                    <tr id="SubSeller_0" class="usertosellerparent_0 nodatatr hidetr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">Seller To Sub Seller Mapping</h5>

                                                            <table id="tblSubSellerMapping_0" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40 !important;color:#fff">
                                                                    <tr id="subsellermainrow_0">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th>Sub Seller</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>
                                                                        <th class="hidden-column">USTSSM_ID</th>

                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SubSellerMapping_0_SubSeller_0">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSubSellerMappingAddNewRow_0_SubSeller_0" class="btn btn-sm btnSubSellerMappingAddNewRow addbutton" onclick="AddOrEditSubSellerTo(this)"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSubSellerMappingRemoveRow_0_SubSeller_0" class="btn btn-sm btnSubSellerMappingRemoveRow" onclick="Remove_SubSellerTo_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center SSMtxtSerialNo "><span id="SellerToSubSellerMapping_row_0_SubSeller_0" style="color: #111; font-weight: 650;">1</span></td>
                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="SSMselectSeller_0_SubSeller_0" class="form-control   selectCategory border-0 w-100">
                                                                                    <option value="">Select Option</option>

                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsViewOrder_0_SubSeller_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsCreateOrder_0_SubSeller_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsGetQuote_0_SubSeller_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsFinancial_0_SubSeller_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td id="USTSSM_ID_0_SubSeller_0" class="hidden-column"></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>

                                                    <tr id="Tariff_0" class="usertosellerparent_0 nodatatr hidetr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">
                                                                Seller To Tariff Mapping
                                                            </h5>

                                                            <table id="tblSellerToTariffMapping_0" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40;background-image: none !important; color:#fff">
                                                                    <tr id="tarifftomainrow_0">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th>Tariff</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>
                                                                        <th class="hidden-column">USTSTM_ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SellerToTariffMapping_0_Tariff_0">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSellerToTariffMappingAddNewRow_0_Tariff_0" class="btn btn-sm btnSellerToTariffMappingAddNewRow addbutton" onclick="AddOrEditTariffTo(this)"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSellerToTariffMappingRemoveRow_0_Tariff_0" class="btn btn-sm btnSellerToTariffMappingRemoveRow" onclick="Remove_Tariff_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center STTMtxtSerialNo "><span id="SelleToTariffMapping_row_0_Tariff_0" style="color: #111; font-weight: 650;">1</span></td>
                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="STTMSelectSeller_0_Tariff_0" class="form-control   selectCategory border-0 w-100">
                                                                                    <option value="">Select Option</option>

                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsViewOrder_0_Tariff_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox_Tariff_0">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsCreateOrder_0_Tariff_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsGetQuote_0_Tariff_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsFinancial_0_Tariff_0" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td id="USTSTM_ID_0_Tariff_0" class="hidden-column"></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>


                                                    @*  Show Tr
                                                    *@

                                                    <tr id="usertoseller_1" class="usertosellerparent_1 usedforJson">

                                                        <td style="width:5%;">
                                                            <span id="toggleRowsBtn_1" class="btn btn-sm arrowIcon paddingzero" onclick="toggleRow(this)">
                                                                <i class='far fa-arrow-alt-circle-down iconstyle' style=" font-size:17px; color:green;"></i>
                                                            </span>

                                                            <a id="btnUserToSelerAddNewRow_1" class="btn btn-sm btnUserToSelerAddNewRow paddingzero" onclick="AddOrEditUserSeller()"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                            <a id="btnUserToSelerRemoveRow_1" class="btn btn-sm btnUserToSelerRemoveRow paddingzero" onclick="Remove_UserSellet_Row(this);"><i class="fa iconstyle" style="  color:red">&#xf00d;</i></a>
                                                        </td>
                                                        <td style="width: 3%;" class="text-center txtSerialNo "><span id="usertoseller-row_1" style="color: #111; font-weight: 650;">1</span></td>
                                                        <td style="width:12%">
                                                            <select id="selectSeller_1" class="form-control select2 selectCategory border-0 w-100 getDataForJson">
                                                                <option value="">Select Option</option>
                                                                @for (int i = 0; i <= ViewBag.SellerDT.Rows.Count - 1; i++)
                                                                {
                                                                    <option value="@ViewBag.SellerDT.Rows[i]["value"].ToString()">@ViewBag.SellerDT.Rows[i]["text"].ToString()</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsViewOrder_1" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsCreateOrder_1" type="checkbox" class=" form-check-input" checked>


                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsGetQuote_1" type="checkbox" class=" form-check-input" checked>


                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsFinancial_1" type="checkbox" class=" form-check-input" checked>


                                                        </td>
                                                        <td style="width:5%" class="centercheckbox">

                                                            <input id="chkIsAdmin_1" type="checkbox" class=" form-check-input">


                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsBlankSubSellerAllowed_1" type="checkbox" class=" form-check-input" checked>


                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsAllSubSellerAllowed_1" type="checkbox" class=" form-check-input" checked onchange="CheckShowRelatedSection(this, 'SubSeller')">


                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsBlankPartnerAllowed_1" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsAllPartnerAllowed_1" type="checkbox" class=" form-check-input" checked onchange="CheckShowRelatedSection(this, 'Partner')">

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsBlankTariffAllowed_1" type="checkbox" class=" form-check-input" checked>

                                                        </td>
                                                        <td style="width:7%" class="centercheckbox">

                                                            <input id="chkIsAllTariffAllowed_1" type="checkbox" class=" form-check-input" checked onchange="CheckShowRelatedSection(this, 'Tariff')">

                                                        </td>

                                                        <td id="UTSM_ID_1" class="hidden-column"></td>
                                                    </tr>
                                                    <tr id="BillTo_1" class="usertosellerparent_1 usedforJson nodatatr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">
                                                                Seller To Bill Mapping
                                                            </h5>

                                                            <table id="tblSellerToBillTo_1" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40  ; color:#fff">
                                                                    <tr id="billtomainrow_1">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th class="hidden-column">USTSBM_ID</th>
                                                                        <th>Bill TO</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SellerBillToMapping_1_BillTo_1">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSellerBillToMappingAddNewRow_1_BillTo_1" class="btn btn-sm btnSellerBillToMappingAddNewRow " onclick="AddOrEditBillTo(this)" style="margin-left: 8px;"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSellerBillToMappingRemoveRow_1_BillTo_1" class="btn btn-sm btnSellerBillToMappingRemoveRow_BillTo_1" onclick="Remove_BillTo_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center SBTMItxtSerialNo "><span id="SellerBillToMapping_row_1_BillTo_1" style="color: #111; font-weight: 650;">1</span></td>

                                                                        <td style="width: 0%;" id="USTSBM_ID_1_BillTo_1" class="hidden-column"></td>


                                                                        <td style="width:5%" class="selecttdstyle">
                                                                            <div class="myselect">
                                                                                <select id="SBTMSelectSeller_1_BillTo_1" class="form-select   selectCategory border-0 w-100">
                                                                                    <option value="1">Select Option</option>



                                                                                </select>
                                                                            </div>
                                                                        </td>

                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsViewOrder_1_BillTo_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsCreateOrder_1_BillTo_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsGetQuote_1_BillTo_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="chkSBTMIsFinancial_1_BillTo_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>

                                                    <tr id="Partner_1" class="usertosellerparent_1 usedforJson nodatatr hidetr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">
                                                                Seller To Partner Mapping
                                                            </h5>

                                                            <table id="tblSellerToPartnerMapping_1" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40 !important;color:#fff">
                                                                    <tr id="partnertomainrow_1">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th>Partner</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>
                                                                        <th class="hidden-column">USTSPM_ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SellerToPartnerMapping_1_Partner_1">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSellerToPartnerMappingAddNewRow_1_Partner_1" class="btn btn-sm btnSellerToPartnerMappingAddNewRow  " onclick="AddOrEditPartnerTo(this)" style="margin-left: 8px;"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSellerToPartnerMappingRemoveRow_1_Partner_1" class="btn btn-sm btnSellerToPartnerMappingRemoveRow_Partner_1" onclick="Remove_PartnerTo_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center STPMtxtSerialNo "><span id="SellerToPartnerMapping_row_1_Partner_1" style="color: #111; font-weight: 650;">1</span></td>
                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="STPMselectSeller_1_Partner_1" class="form-control select2 selectCategory border-0 w-100">
                                                                                    <option value="">Select Option</option>

                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkisViewOrder_1_Partner_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkisCreateOrder_1_Partner_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkisGetQuote_1_Partner_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STPMchkIsFinancial_1_Partner_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td id="USTSPM_ID_1_Partner_1" class="hidden-column"></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                    <tr id="SubSeller_1" class="usertosellerparent_1 usedforJson nodatatr hidetr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">Seller To Sub Seller Mapping</h5>

                                                            <table id="tblSubSellerMapping_1" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40 !important;color:#fff">
                                                                    <tr id="subsellermainrow_1">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>
                                                                        <th>Sub Seller</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>
                                                                        <th class="hidden-column">USTSSM_ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SubSellerMapping_1_SubSeller_1">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSubSellerMappingAddNewRow_1_SubSeller_1" class="btn btn-sm btnSubSellerMappingAddNewRow  " onclick="AddOrEditSubSellerTo(this)" style="margin-left:8px;"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSubSellerMappingRemoveRow_1_SubSeller_1" class="btn btn-sm btnSubSellerMappingRemoveRow_SubSeller_1 " onclick="Remove_SubSellerTo_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>
                                                                        <td style="width: 5%;" class="text-center SSMtxtSerialNo "><span id="SellerToSubSellerMapping_row_1_SubSeller_1" style="color: #111; font-weight: 650;">1</span></td>
                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="SSMselectSeller_1_SubSeller_1" class="form-control select2 selectCategory border-0 w-100">
                                                                                    <option value="">Select Option</option>

                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsViewOrder_1_SubSeller_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsCreateOrder_1_SubSeller_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsGetQuote_1_SubSeller_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="SSMchkIsFinancial_1_SubSeller_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td id="USTSSM_ID_1_SubSeller_1" class="hidden-column"></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>


                                                    <tr id="Tariff_1" class="usertosellerparent_1 usedforJson nodatatr hidetr">

                                                        <td colspan="14">

                                                            <h5 style="margin-left:30px;">
                                                                Seller To Tariff Mapping
                                                            </h5>

                                                            <table id="tblSellerToTariffMapping_1" class="table table-bordered table-striped childtable">
                                                                <thead style="background:#343a40;background-image: none !important; color:#fff">
                                                                    <tr id="tarifftomainrow_1">
                                                                        <th>Action</th>
                                                                        <th>Sr.No</th>

                                                                        <th>Tariff</th>
                                                                        <th>View Order</th>
                                                                        <th>Create Order</th>
                                                                        <th>Get Quote</th>
                                                                        <th>Financial</th>
                                                                        <th class="hidden-column">USTSTM_ID</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr id="SellerToTariffMapping_1_Tariff_1">

                                                                        <td style="width:5%;text-align:center;">
                                                                            <a id="btnSellerToTariffMappingAddNewRow_1_Tariff_1" class="btn btn-sm btnSellerToTariffMappingAddNewRow  " onclick="AddOrEditTariffTo(this)" style="margin-left: 8px;"><i class="fa fa-plus iconstyle" style=" color:green"></i></a>
                                                                            <a id="btnSellerToTariffMappingRemoveRow_1_Tariff_1" class="btn btn-sm btnSellerToTariffMappingRemoveRow_Tariff_1" onclick="Remove_Tariff_Row(this);"><i class="fa iconstyle" style="color:red">&#xf00d;</i></a>
                                                                        </td>


                                                                        <td style="width:5%;" class="text-center STTMtxtSerialNo "><span id="SelleToTariffMapping_row_1_Tariff_0" style="color: #111; font-weight: 650;">1</span></td>

                                                                        <td style="width:5%">
                                                                            <div class="myselect">
                                                                                <select id="STTMSelectSeller_1_Tariff_1" class="form-control select2 selectCategory border-0 w-100">
                                                                                    <option value="">Select Option</option>

                                                                                </select>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsViewOrder_1_Tariff_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsCreateOrder_1_Tariff_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsGetQuote_1_Tariff_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td style="width:5%" class="centercheckbox">
                                                                            <div>
                                                                                <label>
                                                                                    <input id="STTMchkIsFinancial_1_Tariff_1" type="checkbox" class=" form-check-input" checked>
                                                                                    <span class="check"></span>
                                                                                </label>
                                                                            </div>
                                                                        </td>
                                                                        <td id="USTSTM_ID_1_Tariff_1" class="hidden-column"></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>

                                                </tbody>

                                            </table>



                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="modal-footer " style="width:95%;">

                <button type="button" class="btn Theme-button font-weight-medium" id="ResetModal" onclick="ResetModal();">Reset</button>
                <button type="button" class="btn btn-light-danger text-danger font-weight-medium" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn Theme-button font-weight-medium" id="AddOrEddButton" onclick="AddOrEditUser();"> Add</button>

            </div>
        </div>
    </div>
</div>
<!--User Form Modal End-->

<script src="~/js/GridFilter2.js?ID=@ViewBag.GUID"></script>
<script src="~/js/select2.js?ID=@ViewBag.GUID" type="text/javascript"></script>
<script src="~/js/custom-Validation.js?ID=@ViewBag.GUID"></script>

@section scripts {
    <script>
        var RightsList = JSON.parse($("#RightsList").val());
        var UserTypeList = JSON.parse($("#UserTypeList").val());
        var DepartmentList = JSON.parse($("#DepartmentList").val());
        var QuestionList = JSON.parse($("#QuestionList").val());
        var BlockList = JSON.parse($("#BlockList").val());
        var TimeZoneList = JSON.parse($("#TimeZoneList").val());
        var RolesList = JSON.parse($("#RolesList").val());
        var ApplicationAccessList = JSON.parse($("#ApplicationAccessList").val());
        var HubAccessList = JSON.parse($("#HubAccessList").val());

        KendoDateInitial();
        //Select2Initial();
        SetPageRights();

        //Load Grids
        if (RightsList.IsView) {
            UserGridLoad();
            $("#tab1").change(function () {
                if ($(this).is(":checked")) {
                    if ($("#grid").data("kendoGrid")) {
                        return;
                    }
                    UserGridLoad();
                }
            });

            $("#tab2").change(function () {
                if ($(this).is(":checked")) {
                    if ($("#grid1").data("kendoGrid")) {
                        return;
                    }
                    UserApplicationAccessGridLoad();
                }
            });

            $("#tab3").change(function () {
                if ($(this).is(":checked")) {
                    if ($("#grid2").data("kendoGrid")) {
                        return;
                    }
                    UserApplicationHubAccessGridLoad();

                }
            });
        }

        function SetPageRights() {
            if (RightsList.IsAdd) {
                $('#usersetupmodalbutton').show();
                $('#User_Application_Access_Btn').show();
                $('#User_Application_Hub_Access_Btn').show();
            }
        }

        //User Application Access ************************************************************* Start */
        function UserApplicationAccessGridLoad() {
            var kendogridid = 'grid1';
            var pagesize = 30;
            $("#PageLoader").show();
            $("#" + kendogridid).empty();
            var UserApplicationAccessFieldstype = {
                RowNo: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                UAA_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                Application_MTV_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                USERNAME: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                ApplicationName: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                NAV_USERNAME: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                LastLoginDateTime: { type: KendoFilterTypes.Date, srtype: SRVTypes.Date },
                IsActive: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
            }
            var _griddatasource = GetGridDataSourceAjaxCommon(kendogridid, pagesize, "/Security/GetFilterData_UserApplicationAccess_List", true, true, true, UserApplicationAccessFieldstype, false, false);
            dataSource = _griddatasource
            $("#" + kendogridid).kendoGrid({
                dataSource: dataSource,
                responsive: false,
                pageable: {
                    alwaysVisible: true,
                    refresh: true,
                    pageSizes: [30, 50, 100, 500, 1000, 5000],
                    messages: {
                        display: "{0} - {1} of {2} items &nbsp;&nbsp;|&nbsp;&nbsp; Export:&nbsp;<img id='" + kendogridid + "_exportExcel' title='Click here to export to excel file' src='/icon/excel_icon.jpg' style='width:23px; height:23px; cursor:pointer' onclick='onClickExportExcel(this)' /> ",
                        empty: "No data found",
                    }
                },
                controllername: "Report",
                controllermethodname: "ExportInExcel_UsersDetail",
                sortable: true,
                resizable: false,
                reorderable: false,
                noRecords: true,
                filterable: {
                    extra: true,
                    //operators: KendoOperatorListOfString,
                },
                customfixheader: false,
                pageloaderid: "PageLoader",
                dataBound: onKendoDataBound,
                dataBinding: function (e) {
                    $("#PageLoader").hide();
                },
                columns: [
                    {
                        field: "RowNo",
                        title: "Sr.No",
                        width: 50,
                        filterable: false,
                        sortable: false
                    },
                    {
                        field: "USERNAME",
                        title: "User Name",
                        width: 110,
                        filterable: { extra: false, operators: { number: { eq: "equal" } } }
                    },
                    {
                        field: "Application_MTV_ID",
                        title: "Application Name",
                        width: 120,
                        template: function (dataItem) {
                            return GetString(dataItem.ApplicationName);
                        },
                        filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: ApplicationAccessList,
                        originalfield: "ApplicationName"
                    },
                    {
                        field: "NAV_USERNAME",
                        title: "NAV User Name",
                        width: 130,
                        filterable: { extra: false, operators: { string: { contains: "contains" } } }
                    },
                    {
                        field: "LastLoginDateTime",
                        title: "Last Login",
                        width: 100,
                        filterable: {
                            ui: "datepicker",
                            extra: false,
                        },
                        template: function (dataItem) {
                            return FormatDateTimeWithTimeZone(dataItem.LastLoginDateTime, dataItem.LastLoginDateTime);
                        },
                        excelcolumntype: ExcelColumnTypes.Date_mmddyyyy,
                    },
                    {
                        field: "IsActive", title: "Is Active", width: 60,
                        template: function (dataItem) {
                            if (RightsList.IsEdit) {
                                if (dataItem.IsActive) {
                                    return '<img src="../icon/tick.png" alt="Active" class="cursor-pointer" onclick="UserApplicationAccess_Remove(this,' + "'" + dataItem.Encrypted_UAA_ID + "'," + dataItem.RowNo + "," + dataItem.IsActive + ');"/>';
                                } else {
                                    return '<img src="../icon/cross.png" alt="Inactive" class="cursor-pointer" onclick="UserApplicationAccess_Remove(this,' + "'" + dataItem.Encrypted_UAA_ID + "'," + dataItem.RowNo + "," + dataItem.IsActive + ');"/>';
                                }
                            }
                            else {
                                if (dataItem.IsActive) {
                                    return '<img src="../icon/tick.png" alt="Active"/>';
                                } else {
                                    return '<img src="../icon/cross.png" alt="Inactive"/>';
                                }
                            }
                        },
                        attributes: {
                            style: "text-align: center;"
                        }
                    },
                    {
                        title: "Action",
                        width: 60,
                        filterable: false,
                        template: function (dataItem) {
                            var actionfield = '';
                            if (RightsList.IsEdit) {
                                actionfield = '<a class=""><i class="fa fa-edit Theme-icon fa-1x ms-1 cursor-pointer" onclick="GetAddEditUserApplicationAccessModal(' + "'" + dataItem.Encrypted_UAA_ID + "'" + ');"></i></a>';
                            }
                            return actionfield;
                        }

                    },
                ],
                detailInit: function (e) {
                    $("#PageLoader").hide();
                }
            });
        }
        function GetAddEditUserApplicationAccessModal(Encrypted_UAA_ID) {
            if ((Encrypted_UAA_ID == "" && RightsList.IsAdd == true) || (Encrypted_UAA_ID != "" && RightsList.IsEdit == true)) {
                GetAddEditModalAjaxCommon(Encrypted_UAA_ID, "/Security/GetAddEditUserApplicationAccessModal", InitialModalDrops, [Encrypted_UAA_ID]);
                //SetUserApplicationAccessOptions(Encrypted_UAA_ID);
            } else {
                WarningMessage('No Rights', "You Don't Have Rights To Access.", true, "Ok");
                $("#PageLoader").hide();
                return;
            }
        }
        function AddOrEditUserApplicationAccess() {
            var ObjJson = new Object();
            ObjJson.UAA_ID = $("#UAA_ID").val();
            ObjJson.User_Name = $("#USERNAME").val();
            ObjJson.Application_MTV_ID = ListCommaSeperatedString($("#Application_MTV_ID").val());
            ObjJson.NAV_USERNAME = $("#NAV_USERNAME").val();

            var JsonData = JSON.stringify(ObjJson);

            requiredFields = ['User_Name', 'Application_MTV_ID'];
            if (!validateRequiredFields(ObjJson, requiredFields)) {
                return;
            }

            var appListArray = $("#Application_MTV_ID").val();
            if (appListArray.includes('148103') && ObjJson.NAV_USERNAME == "") {
                toastr.error('NAV_USERNAME field is Required');
                return;
            }

            AddEditRemoveAjaxCommon(JsonData, "/Security/AddOrEdit_UserApplicationAccess", null, false, 'grid1');
        }
        function UserApplicationAccess_Remove(this_, Encrypted_UAA_ID, RowNo, IsActive) {
            if (RightsList.IsDelete) {
                if ($(this_).attr("disabled") == "disabled") {
                    return;
                }
                $(this_).attr("disabled", "disabled");
                IsActiveEditCommon(Encrypted_UAA_ID, "/Security/Remove_UserApplicationAccess", null, RowNo, IsActive, "Row No", 'grid1');
            } else {
                WarningMessage('No Rights', "You Don't Have Rights To Access.", true, "Ok");
                $("#PageLoader").hide();
                return;
            }
        }
        function GetNavUserNameTextBox(_this) {
            var selectList = $('#' + _this.id).val();
            var validAppID = '148103';
            if (Array.isArray(selectList)) {
                if (selectList.includes(validAppID)) {
                    $('#NAV_USERNAME').parent().parent().removeClass('d-none');
                } else {
                    $('#NAV_USERNAME').parent().parent().addClass('d-none');
                }
            } else {
                if (selectList == validAppID) {
                    $('#NAV_USERNAME').parent().parent().removeClass('d-none');
                } else {
                    $('#NAV_USERNAME').parent().parent().addClass('d-none');
                }
            }
        }
        function InitialModalDrops(Encrypted_UAA_ID) {
            UserNameAutoCompleteCommon("USERNAME");
            Select2Initial('Application_MTV_ID', false);
            $('#Application_MTV_ID option[value=""]').remove();
            SetUserApplicationAccessOptions(Encrypted_UAA_ID);
        }
        function ListCommaSeperatedString(selectList) {
            var list = "";
            list = selectList.join(',');
            return list;
        }
        function SetUserApplicationAccessOptions(Encrypted_UAA_ID) {
            if (Encrypted_UAA_ID != "") {
                GetResponseAjaxCommon(Encrypted_UAA_ID, "/Security/SetUserAppAccessDropdownSelectedOption", function (res) {
                    SetMultiDropdownSelectedOptions("Application_MTV_ID", res);
                });
            }
        }
        function Get_UserAppAccess_Dropdown() {
            let userName = $('#USERNAME').val();
            GetDropDownListCommonAjax(userName, "/Security/Get_UserAppAccess_Dropdown", "Application_MTV_ID");
        }
        //User Application Access ************************************************************* End */

        //User Application Hub Access ************************************************************* Start */
        function UserApplicationHubAccessGridLoad() {
            var kendogridid = 'grid2';
            var pagesize = 30;
            $("#PageLoader").show();
            $("#" + kendogridid).empty();
            var UserApplicationHubAccessFieldstype = {
                RowNo: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                UAHA_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                Application_MTV_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                HL_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                USERNAME: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                ApplicationName: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                HubName: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                IsActive: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
                IsAddRight: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
                IsEditRight: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
                IsDeleteRight: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
            }
            var _griddatasource = GetGridDataSourceAjaxCommon(kendogridid, pagesize, "/Security/GetFilterData_UsersApplicationHubAccess_List", true, true, true, UserApplicationHubAccessFieldstype, false, false);
            dataSource = _griddatasource
            $("#" + kendogridid).kendoGrid({
                dataSource: dataSource,
                responsive: false,
                pageable: {
                    alwaysVisible: true,
                    refresh: true,
                    pageSizes: [30, 50, 100, 500, 1000, 5000],
                    messages: {
                        display: "{0} - {1} of {2} items &nbsp;&nbsp;|&nbsp;&nbsp; Export:&nbsp;<img id='" + kendogridid + "_exportExcel' title='Click here to export to excel file' src='/icon/excel_icon.jpg' style='width:23px; height:23px; cursor:pointer' onclick='onClickExportExcel(this)' /> ",
                        empty: "No data found",
                    }
                },
                controllername: "Report",
                controllermethodname: "ExportInExcel_UsersDetail",
                sortable: true,
                resizable: false,
                reorderable: false,
                noRecords: true,
                filterable: {
                    extra: true,
                    //operators: KendoOperatorListOfString,
                },
                customfixheader: false,
                pageloaderid: "PageLoader",
                dataBound: onKendoDataBound,
                dataBinding: function (e) {
                    $("#PageLoader").hide();
                },
                columns: [
                    {
                        field: "RowNo",
                        title: "Sr.No",
                        width: 80,
                        filterable: false,
                        sortable: false
                    },
                    {
                        field: "USERNAME",
                        title: "User Name",
                        width: 110,
                        filterable: { extra: false, operators: { number: { eq: "equal" } } }
                    },
                    {
                        field: "HL_ID",
                        title: "Hub Name",
                        width: 120,
                        template: function (dataItem) {
                            return GetString(dataItem.HubName);
                        },
                        filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: HubAccessList,
                        originalfield: "HubName"
                    },
                    {
                        field: "Application_MTV_ID",
                        title: "Application Name",
                        width: 120,
                        template: function (dataItem) {
                            return GetString(dataItem.ApplicationName);
                        },
                        filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: ApplicationAccessList,
                        originalfield: "ApplicationName"
                    },
                    {
                        field: "IsAddRight",
                        title: "IsAdd Right",
                        width: 120
                    },
                    {
                        field: "IsEditRight",
                        title: "IsEdit Right",
                        width: 120
                    },
                    {
                        field: "IsDeleteRight",
                        title: "IsDelete Right",
                        width: 120
                    },
                    {
                        field: "IsActive", title: "Is Active", width: 120,
                        template: function (dataItem) {
                            if (RightsList.IsEdit) {
                                if (dataItem.IsActive) {
                                    return '<img src="../icon/tick.png" alt="Active" class="cursor-pointer" onclick="UserApplicationHubAccess_Remove(this,' + "'" + dataItem.Encrypted_UAHA_ID + "'," + dataItem.RowNo + "," + dataItem.IsActive + ');"/>';
                                } else {
                                    return '<img src="../icon/cross.png" alt="Inactive" class="cursor-pointer" onclick="UserApplicationHubAccess_Remove(this,' + "'" + dataItem.Encrypted_UAHA_ID + "'," + dataItem.RowNo + "," + dataItem.IsActive + ');"/>';
                                }
                            }
                            else {
                                if (dataItem.IsActive) {
                                    return '<img src="../icon/tick.png" alt="Active"/>';
                                } else {
                                    return '<img src="../icon/cross.png" alt="Inactive"/>';
                                }
                            }
                        },
                        attributes: {
                            style: "text-align: center;"
                        }
                    },
                    {
                        title: "Action",
                        width: 100,
                        filterable: false,
                        template: function (dataItem) {
                            var actionfield = '';
                            if (RightsList.IsEdit) {
                                actionfield = '<a class=""><i class="fa fa-edit Theme-icon fa-1x ms-1 cursor-pointer" onclick="GetAddEditUserApplicationHubAccessModal(' + "'" + dataItem.Encrypted_UAHA_ID + "'" + ',' + "'" + dataItem.USERNAME + "'" + ');"></i></a>';
                            }
                            return actionfield;
                        }

                    },
                ],
                detailInit: function (e) {
                    $("#PageLoader").hide();
                }
            });
        }
        function GetAddEditUserApplicationHubAccessModal(Encrypted_UAHA_ID, UserName) {
            $("#PageLoader").show();
            var Title = "";
            if (Encrypted_UAHA_ID != "") {
                Title = "User Application Hub Access Update";
            }
            else {
                Title = "User Application Hub Access Add";
            }

            var ObjJson = new Object();
            ObjJson.Encrypted_UAHA_ID = Encrypted_UAHA_ID;
            ObjJson.UserName = UserName;
            GetModalDataCommon("modal-xl", Title, InitialUserApplicationHubAccessModal, UserApplicationHubAccessModalFooter, JSON.stringify(ObjJson), '/Security/GetAddEditUserApplicationHubAccessModal', true, true, false, undefined, [Encrypted_UAHA_ID]);
        }
        function UserApplicationHubAccessModalFooter(Encrypted_UAHA_ID) {
            var Footer = "";
            if (Encrypted_UAHA_ID != "") {
                Footer = "<button type='button' class='btn Theme-button font-weight-medium' onclick='AddOrEditUserApplicationHubAccess();'>Update</button>";
            }
            else {
                Footer = "<button type='button' class='btn Theme-button font-weight-medium' onclick='AddOrEditUserApplicationHubAccess();'>Add</button>";
            }
            return Footer;
        }
        function UserApplicationHubAccess_Remove(this_, Encrypted_UHAH_ID, RowNo, IsActive) {
            if (RightsList.IsDelete) {
                if ($(this_).attr("disabled") == "disabled") {
                    return;
                }
                $(this_).attr("disabled", "disabled");
                IsActiveEditCommon(Encrypted_UHAH_ID, "/Security/Remove_UserApplicationHubAccess", null, RowNo, IsActive, "Row No", 'grid2');
            } else {
                WarningMessage('No Rights', "You Don't Have Rights To Access.", true, "Ok");
                $("#PageLoader").hide();
                return;
            }
        }
        function UserApplicationHubAccess_TableModification(this_) {
            var IsUserCopyRights = $('#UserCopyRights').is(':checked');
            var UserName = this_.value;
            UserName = $('#USERNAME').val();

            if (UserName !== "" && IsUserCopyRights == false) {
                $('#tblUserAppHubAccess').show();
            }
            else if (UserName !== "" && IsUserCopyRights == true) {
                $('#tblUserAppHubAccess').show();
                $('#modal-confirmation-message').html('');
                var message = "<h3 class='text-center'>Are you sure you want to Copy Data Please Select User?</h3>";
                message += "<input type='text' id='CopyUserName' name='USERNAME' class='control-select form-control w-100'  value='' onkeyup='UserNameAutoCompleteCommon(''CopyUserName'')' autocomplete='off' />";

                $('#modal-confirmation-message').append(message);
                $('#modal-confirmation-div').modal({
                    backdrop: false
                });
                $('#modal-confirmation-yes').removeAttr('disabled');
                $('#modal-confirmation-div').modal('show');
                UserNameAutoCompleteCommon("CopyUserName");
                $('#modal-confirmation-yes').off('click').on('click', function () {
                    var CopyUserName = $("#CopyUserName").val();
                    GetResponseAjaxCommon(CopyUserName, "/Security/Get_UserApplicationHubAccess_CopyData", function (res) {
                        $('#tblUserAppHubAccess tbody').append(res);
                        UpdateRowNumbers();
                        UpdateRowButtons();
                    });
                });
            }
            else if (IsUserCopyRights == true) {
                $('#tblUserAppHubAccess').show();
            }
            else {
                $('#tblUserAppHubAccess').hide();
            }
        }

        function AddOrEditUserApplicationHubAccess() {
            UpdateRowNumbers();
            UpdateRowButtons();
            var userHubAccesss = [];
            var isValid = true;
            $("#tblUserAppHubAccess tbody tr:visible").each(function () {
                var rowId = $(this).attr('id').split('_')[1];
                var userHubAccess = {
                    UAHA_ID: $('#UHAH_ID_' + rowId).val(),
                    HUB_CODE: $('#selectHUb_' + rowId).val(),
                    Application_MTV_ID: $('#selectApplication_' + rowId).val(),
                    IsAddRight: $('#chkIsAdd_' + rowId).is(':checked'),
                    IsEditRight: $('#chkIsEdit_' + rowId).is(':checked'),
                    IsDeleteRight: $('#chkIsDelete_' + rowId).is(':checked')
                };
                userHubAccesss.push(userHubAccess);
            });

            isValid = validateDataForUserAppHubAccess(userHubAccesss);
            if (!isValid) {
                toastr.error('Same Data Already Exists!');
                return;
            }
            var USERNAME = $('#USERNAME').val();
            var JsonData = JSON.stringify(userHubAccesss);
            var ObjJson = new Object();
            ObjJson.Json = userHubAccesss;
            ObjJson.UserName = $("#USERNAME").val();
            AddEditRemoveAjaxCommon(JSON.stringify(ObjJson), "/Security/AddOrEdit_UserApplicationHubAccess", null, true, 'grid2');
            resetmodalDynamic('dynamic-modal5');
        }

        function AddNewRowUserAppHubAccess() {
            var lastRow = $("#tblUserAppHubAccess tbody tr:last");
            var lastRowId = lastRow.attr('id').split('_')[1];
            var newRowId = parseInt(lastRowId) + 1;
            var newRow = $("#Row_0").clone().prop('id', 'Row_' + newRowId).show();
            newRow.find("input[type='checkbox']").prop('checked', true);
            newRow.find(".rowNo").text(newRowId).prop('id', 'txtRowNumber_' + newRowId);
            newRow.find("#UHAH_ID_").text(newRowId).prop('id', 'UHAH_ID_' + newRowId);
            newRow.find("#selectHUb_0").prop('id', 'selectHUb_' + newRowId);
            newRow.find("#selectApplication_0").prop('id', 'selectApplication_' + newRowId);
            newRow.find("#chkIsAdd_0").prop('id', 'chkIsAdd_' + newRowId);
            newRow.find("#chkIsEdit_0").prop('id', 'chkIsEdit_' + newRowId);
            newRow.find("#chkIsDelete_0").prop('id', 'chkIsDelete_' + newRowId);
            newRow.find(".btnRemoveRow").prop('id', 'btnRemoveRow_' + newRowId).show();
            newRow.find("#btnAddNewRow_0").prop('id', 'btnAddNewRow_' + newRowId).show();
            newRow.appendTo("#tblUserAppHubAccess tbody");

            UpdateRowNumbers();  // Call the function to update row numbers
            UpdateRowButtons();  // Call the function to update the Add/Remove buttons

            var selectSeller1 = $("#selectApplication_" + newRowId);
            if (selectSeller1.data('select2')) {
                selectSeller1.select2('destroy');
            }

            var selectSeller = $("#selectHUb_" + newRowId);
            if (selectSeller.data('select2')) {
                selectSeller.select2('destroy');
            }
            selectSeller.select2();
            selectSeller1.select2();
        }
        function RemoveRowUserAppHubAccess(this_) {
            if ($("#" + this_.id).attr("disabled") === "disabled") {
                return;
            }
            $("#" + this_.id).attr("disabled", "disabled");
            $('#PageLoader').show();

            var id = this_.id;
            var replaceID = id.replace('btnRemoveRow_', '');
            const removedID = parseInt(replaceID);
            $('#' + id).closest('tr').remove();
            UpdateRowNumbers();  // Call the function to update row numbers
            UpdateRowButtons();  // Call the function to update the Add/Remove buttons
            $('#PageLoader').hide();
            $("#" + this_.id).removeAttr("disabled");
        }
        function ResetGroupMemebersRows() {
            $("#txtGroupName").val('');
            $('#selectHUb_1').val('').trigger('change');
            $('#selectApplication_1').val('').trigger('change');
            $('#chkIsAdd_1').prop('checked', false);
            $('#chkIsEdit_1').prop('checked', false);
            $('#chkIsDelete_1').prop('checked', false);
            $('#chkIsUser_1').prop('checked', false);
            $('#tblUserAppHubAccess tbody tr:gt(1)').remove();
            UpdateRowButtons();
        }
        function UpdateRowNumbers() {
            $('#tblUserAppHubAccess tbody tr').each(function (index) {
                $(this).find('.rowNo').text(index);
            });
        }
        function UpdateRowButtons() {
            var rowCount = $('#tblUserAppHubAccess tbody tr').length;
            $('#tblUserAppHubAccess tbody tr').each(function () {
                var rowId = $(this).attr('id').split('_')[1];
                var isLastRow = (rowCount - 1) === parseInt(rowId);

                if (isLastRow) {
                    $(this).find('.btnAddNewRow').show();
                } else {
                    $(this).find('.btnAddNewRow').hide();
                }

                if (rowCount <= 2) {
                    $(this).find('.btnRemoveRow').hide();
                } else {
                    $(this).find('.btnRemoveRow').show();
                }
            });
        }
        function validateDataForUserAppHubAccess(data) {
            const seen = new Set();
            for (const item of data) {
                const key = `${item.HUB_CODE}-${item.Application_MTV_ID}`;
                if (seen.has(key)) {
                    return false;
                }
                seen.add(key);
            }
            return true;
        }
        function InitialUserApplicationHubAccessModal() {
            Select2Initial('selectHUb_1', false);
            Select2Initial('selectApplication_1', false);
            UserNameAutoCompleteCommon("USERNAME");
            //UserApplicationHubAccess_TableModification();
        }
        //User Application Hub Access ************************************************************* End */

        //User ************************************************************* Start */
        function UserGridLoad() {
            var kendogridid = 'grid';
            var pagesize = 30;
            $("#PageLoader").show();
            $("#" + kendogridid).empty();
            $("body").removeClass("modal-open");
            $('#User_Form_Modal').hide();
            var Userfieldstype = {
                RowNo: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                USER_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                UserType_MTV_CODE: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                D_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                SecurityQuestion_MTV_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                BlockType_MTV_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                USERNAME: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                UserType: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Department: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Designation: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                FirstName: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                MiddleName: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                LastName: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Company: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Address: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Address2: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                City: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                State: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Country: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Email: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                Mobile: { type: KendoFilterTypes.String, srtype: SRVTypes.String },
                Phone: { type: KendoFilterTypes.String, srtype: SRVTypes.String },
                PhoneExt: { type: KendoFilterTypes.String, srtype: SRVTypes.String },
                SecurityQuestion: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                TIMEZONE_ID: { type: KendoFilterTypes.Number, srtype: SRVTypes.Int },
                IsApproved: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
                BlockType: { type: KendoFilterTypes.String, srtype: SRVTypes.UpperString },
                PasswordExpiry: { type: KendoFilterTypes.String, srtype: SRVTypes.String },
                IsAPIUser: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
                IsActive: { type: KendoFilterTypes.Boolean, srtype: SRVTypes.Boolean },
            }
            var _griddatasource = GetGridDataSourceAjaxCommon(kendogridid, pagesize, "/Security/GetFilterData_Users_List", true, true, true, Userfieldstype, false, false);
            dataSource = _griddatasource
            $("#" + kendogridid).kendoGrid({
                dataSource: dataSource,
                responsive: false,
                pageable: {
                    alwaysVisible: true,
                    refresh: true,
                    pageSizes: [30, 50, 100, 500, 1000, 5000],
                    messages: {
                        display: "{0} - {1} of {2} items &nbsp;&nbsp;|&nbsp;&nbsp; Export:&nbsp;<img id='" + kendogridid + "_exportExcel' title='Click here to export to excel file' src='/icon/excel_icon.jpg' style='width:23px; height:23px; cursor:pointer' onclick='onClickExportExcel(this)' /> ",
                        empty: "No data found",
                    }
                },
                controllername: "Report", //custom fields for ExportToExcel function
                controllermethodname: "ExportInExcel_UsersDetail", //custom fields for ExportToExcel function
                sortable: true,
                resizable: false,
                reorderable: false,
                noRecords: true,
                filterable: {
                    extra: true,
                    //operators: KendoOperatorListOfString,
                },
                customfixheader: false, //custom fields for onKendoDataBound function
                pageloaderid: "PageLoader", //custom fields for onKendoDataBound function
                dataBound: onKendoDataBound,
                dataBinding: function (e) {
                    $("#PageLoader").hide();
                },
                columns: [
                    {
                        field: "RowNo",
                        title: "Sr.No",
                        width: 80,
                        filterable: false,
                        sortable: false
                        // hidden: GetCheckboxValueFromClassAndAttribute('div_' + kendogridid + '_columnhideshowexpandcollaspe', 'RowNo', 'Sr.No'),
                        // orderIndex: GetOrderIndexFromClassAndAttribute('div_' + kendogridid + '_columnhideshowexpandcollaspe', 'RowNo', 'Sr.No'),
                        // showinexcel: true, //optional default is based on hidden or visible true or false
                        // originalfield: "", //optional default is based on field
                        // excelcolumntype: ExcelColumnTypes.General, //optional default value is General
                    },
                    {
                        field: "USER_ID",
                        title: "USER ID",
                        width: 110,
                        filterable: { extra: false, operators: { number: { eq: "equal" } } }
                    },
                    {
                        field: "UserType_MTV_CODE",
                        title: "UserType",
                        width: 150,
                        hidden: true
                    },
                    {
                        field: "D_ID",
                        title: "Department ID",
                        width: 110,
                        hidden: true
                    },
                    {
                        field: "SecurityQuestion_MTV_ID",
                        title: "SecurityQuestion",
                        width: 110,
                        filterable: false,
                        hidden: true,
                        sortable: false,
                        hidden: true
                    },
                    {
                        field: "BlockType_MTV_ID",
                        title: "BlockType",
                        width: 110,
                        filterable: false,
                        sortable: false,
                        hidden: true
                    },
                    {
                        field: "USERNAME", title: "User Name", width: 150,
                        filterable: { extra: false, operators: { string: { contains: "contains", eq: "equal" } } }
                    },
                    {
                        field: "UserType_MTV_CODE", title: "User Type", width: 120,
                        template: function (dataItem) {
                            return GetString(dataItem.UserType);
                        },
                        filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: UserTypeList,
                        originalfield: "UserType"
                    },
                    {
                        field: "D_ID", title: "Department", width: 130,
                        template: function (dataItem) {
                            return GetString(dataItem.Department);
                        },
                        filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: DepartmentList,
                        originalfield: "Department"
                    },
                    {
                        field: "Designation", title: "Designation", width: 130,
                        filterable: { extra: false, operators: { string: { contains: "contains" } } }
                    },
                    {
                        field: "FirstName", title: "First Name", width: 160,
                        filterable: { extra: false, operators: { string: { contains: "contains" } } }
                    },
                    {
                        field: "MiddleName", title: "Middle Name", width: 160,
                        filterable: { extra: false, operators: { string: { contains: "contains" } } }
                    },
                    {
                        field: "LastName", title: "Last Name", width: 160,
                        filterable: { extra: false, operators: { string: { contains: "contains" } } }
                    },
                    {
                        field: "Company", title: "Company", width: 160,
                        filterable: { extra: false, operators: { string: { contains: "contains" } } }
                    },
                    { field: "Address", title: "Address", width: 200, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "Address2", title: "Address 2", width: 200, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "City", title: "City", width: 140, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "State", title: "State", width: 100, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "Country", title: "Country", width: 100, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "Email", title: "Email", width: 200, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "Mobile", title: "Mobile", width: 140, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "Phone", title: "Phone", width: 140, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "PhoneExt", title: "PhoneExt", width: 120, filterable: { extra: false, operators: { string: { contains: "contains" } } } },
                    { field: "SecurityQuestion", title: "Security Question", width: 200, hidden: true },
                    { field: "EncryptedAnswer", title: "Encrypted Answer", width: 200, hidden: true },
                    {
                        field: "TIMEZONE_ID", title: "Time Zone", width: 140,
                        template: function (dataItem) {
                            return GetString(dataItem.TIMEZONE_Name);
                        },
                        filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: TimeZoneList,
                        originalfield: "TIMEZONE_Name"
                    },
                    { field: "IsApproved", title: "Is Approved", width: 140 },
                    {
                        field: "BlockType_MTV_ID", title: "Block Type", width: 120, template: function (dataItem) { return dataItem.BlockType }, filterable: { multi: true, extra: false, search: true, checkAll: false },
                        values: BlockList,
                        originalfield: "originalfield"
                    },
                    { field: "PasswordExpiry", title: "Password Expiry", width: 180, hidden: true },
                    { field: "IsAPIUser", title: "IsAPIUser", width: 120, },
                    {
                        field: "IsActive", title: "Is Active", width: 120,
                        template: function (dataItem) {
                            if (RightsList.IsDelete) {
                                if (dataItem.IsActive) {
                                    return '<img src="../icon/tick.png" alt="Active" onclick="User_Remove(this,' + dataItem.USER_ID + ',\'' + dataItem.USERNAME + '\',' + dataItem.IsActive + ');"/>';
                                } else {
                                    return '<img src="../icon/cross.png" alt="Inactive" onclick="User_Remove(this,' + dataItem.USER_ID + ',\'' + dataItem.USERNAME + '\',' + dataItem.IsActive + ');"/>';
                                }
                            }
                            else {
                                if (dataItem.IsActive) {
                                    return '<img src="../icon/tick.png"/>';
                                } else {
                                    return '<img src="../icon/cross.png"/>';
                                }
                            }
                        },
                        attributes: {
                            style: "text-align: center;"
                        }
                    },
                    {

                        title: "Action",
                        width: 100,
                        filterable: false,
                        template: function (dataItem) {
                            var actionfield = '';
                            if (RightsList.IsEdit) {
                                var edit = "Edit"
                                actionfield = '<a><i class="fa fa-edit Theme-icon fa-1x ms-1 cursor-pointer" onclick="GetAddEditUserSetupModal(\'' + dataItem.Encrypted_USER_ID + '\',\'' + edit + '\');"></i></a>';


                            }
                            return actionfield;
                        }

                    },
                ],
                detailInit: function (e) {
                    $("#PageLoader").hide();
                }
            });
        }
        $("#User_Form_Modal").on("show.bs.modal", function () {
            $("body").addClass("modal-open");
        });
        $("#User_Form_Modal").on("hidden.bs.modal", function () {
            $("body").removeClass("modal-open");
        });
        function GetAddEditUserSetupModal1(UserID) {
            if ((UserID == 0 && RigthsList.IsAdd == true) || (UserID > 0 && RigthsList.IsEdit == true)) {
                GetAddEditModalAjaxCommon(UserID, "/Security/GetAddEditUserSetupModal");
            } else {
                WarningMessage('No Rights', "You Don't Have Rights To Access.", true, "Ok");
                $("#PageLoader").hide();
                return;
            }
        }
        function User_Remove(this_, UserID, UserName, IsActive) {
            if (RightsList.IsDelete) {
                if ($(this_).attr("disabled") == "disabled") {
                    return;
                }
                $(this_).attr("disabled", "disabled");
                IsActiveEditCommon(UserID, "/Security/Remove_User", null, UserName, IsActive, "User Name", 'grid');
            } else {
                WarningMessage('No Rights', "You Don't Have Rights To Access.", true, "Ok");
                $("#PageLoader").hide();
                return;
            }
        }
        function SellerFormShowHide(val) {
            if (val === 'CLIENT-USER') {
                $(".SellerForm").show();
                $('#addorhideactive').addClass('active')
            }
            else {
                $(".SellerForm").hide();
                $('#addorhideactive').removeClass('active')
            }

        }

        $('#ApplicationAccess').attr('data-placeholder', ' ');
        $('#ApplicationAccess').select2();

        var defaultBlockTypeValue = "149100";
        $('#selectBlockType option').each(function () {

            if ($(this).val() === defaultBlockTypeValue) {
                $(this).prop('selected', true);
                return false;
            }
        });

        function ShowNavTextBox() {
            var selectedValues = $("#ApplicationAccess").val();
            var textBoxContainer = $("#texNavTextBox");
            if (selectedValues && selectedValues.indexOf("148103") !== -1) {
                textBoxContainer.removeClass('navusername');
            } else {
                textBoxContainer.addClass('navusername');
            }
        }
        function CheckShowRelatedSection(checkbox, sectionType) {
            var checkboxId = $(checkbox).attr("id");
            var parentId = $(checkbox).closest("tr").attr("id");

            var splitParentId = parentId.split('_');
            var gettheId = splitParentId[1];

            if (checkbox.checked) {
                $('#' + sectionType + '_' + gettheId).addClass('hidetr');


            } else {
                $('#' + sectionType + '_' + gettheId).removeClass('hidetr');

            }
        }
        function toggleRow(element) {
            // Get the parent tr element of the toggle button
            var parentTR = $(element).closest('tr');
            var splitparentTR = parentTR.attr('id').split('_');
            var chkIsAllTariffAllowed = $('#chkIsAllTariffAllowed_' + splitparentTR[1]);
            var chkIsSubSellerAllowed = $('#chkIsAllSubSellerAllowed_' + splitparentTR[1]);
            var chkIsPartnerToAllowed = $('#chkIsAllPartnerAllowed_' + splitparentTR[1]);


            // Toggle rows associated with check boxes based on their checked status
            if (!chkIsAllTariffAllowed.prop('checked')) {
                if ($("#Tariff_" + splitparentTR[1]).is(":visible")) {
                    $("#Tariff_" + splitparentTR[1]).hide();
                } else {
                    $("#Tariff_" + splitparentTR[1]).show();
                }
            }

            if (!chkIsSubSellerAllowed.prop('checked')) {
                if ($("#SubSeller_" + splitparentTR[1]).is(":visible")) {
                    $("#SubSeller_" + splitparentTR[1]).addClass("hidetr");
                    //$("#SubSeller_" + splitparentTR[1]).hide();
                } else {
                    $("#SubSeller_" + splitparentTR[1]).removeClass("hidetr");
                    //$("#SubSeller_" + splitparentTR[1]).show();
                }
            }

            if (!chkIsPartnerToAllowed.prop('checked')) {
                if ($("#Partner_" + splitparentTR[1]).is(":visible")) {
                    $("#Partner_" + splitparentTR[1]).hide();
                } else {
                    $("#Partner_" + splitparentTR[1]).show();
                }
            }
            if ($("#BillTo_" + splitparentTR[1]).is(":visible")) {
                $("#BillTo_" + splitparentTR[1]).hide();
            } else {
                $("#BillTo_" + splitparentTR[1]).show();
            }

            // Check the visibility state of the rows and change the arrow icon accordingly
            if (!chkIsAllTariffAllowed.prop('checked') || !chkIsSubSellerAllowed.prop('checked') || !chkIsPartnerToAllowed.prop('checked')) {
                if (parentTR.nextAll('tr').slice(0, 4).is(":visible")) {
                    $(element).find("i").removeClass("fa-arrow-alt-circle-down").addClass("fa-arrow-alt-circle-up");
                } else {
                    $(element).find("i").removeClass("fa-arrow-alt-circle-up").addClass("fa-arrow-alt-circle-down");
                }
            }
        }

        $(document).on('change', '.getDataForJson', function () {
            // Get the ID of the select element
            var selectId = $(this).attr('id');
            // Get the selected value
            var SellerKey = $(this).val();
            //var SellerKey =  ;
            if (SellerKey === "" || SellerKey == null) {
                return;
            }
            var splitParts = selectId.split('_');
            var rowNumber = splitParts[1];
            $('#BillTo_' + rowNumber + ' table tbody tr').each(function () {
                $(this).find('select').empty();
            });
            $('#Partner_' + rowNumber).find('select').each(function () {
                $(this).empty();
            });
            $('#SubSeller_' + rowNumber).find('select').each(function () {
                $(this).empty();
            });
            $('#Tariff_' + rowNumber).find('select').each(function () {
                $(this).empty();
            });


            var dropdownIds = {
                'BillTo': '',
                'Partner': '',
                'SubSeller': '',
                'Tariff': ''
            };

            $('#BillTo_' + rowNumber + ' table tbody tr:first').find('select').each(function () {
                dropdownIds['BillTo'] = $(this).attr('id');
                //return false; // Exit the loop after setting the ID
            });

            $('#Partner_' + rowNumber + ' table tbody tr:first').find('select').each(function () {
                dropdownIds['Partner'] = $(this).attr('id');
                //return false; // Exit the loop after setting the ID
            });

            $('#SubSeller_' + rowNumber + ' table tbody tr:first').find('select').each(function () {
                dropdownIds['SubSeller'] = $(this).attr('id');
                //return false; // Exit the loop after setting the ID
            });

            $('#Tariff_' + rowNumber + ' table tbody tr:first').find('select').each(function () {
                dropdownIds['Tariff'] = $(this).attr('id');
                //return false; // Exit the loop after setting the ID
            });


            $('#BillTo_' + rowNumber).addClass('nodatatr');
            $('#Partner_' + rowNumber).addClass('nodatatr');
            $('#SubSeller_' + rowNumber).addClass('nodatatr');
            $('#Tariff_' + rowNumber).addClass('nodatatr');


            $('#BillTo_' + rowNumber + ' table tbody tr').slice(1).remove();
            $('#Partner_' + rowNumber + ' table tbody tr').slice(1).remove();
            $('#SubSeller_' + rowNumber + ' table tbody tr').slice(1).remove();
            $('#Tariff_' + rowNumber + ' table tbody tr').slice(1).remove();

            GetAllDropdownData(SellerKey, dropdownIds, rowNumber);


        });

        function GetAllDropdownData(SellerKey, dropdownIds, RowNumber) {
            var url = "/Security/GetAllDropDownDataForUser";
            $.ajax({
                type: "POST",
                url: url,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(SellerKey),
                dataType: "text",
                success: function (response) {
                    // Parse the string response into a JavaScript object
                    var responseObject = JSON.parse(response);

                    // Iterate over each table in the response object
                    Object.keys(responseObject).forEach(function (tableName) {
                        var tableData = responseObject[tableName];
                        if (tableData.length !== 0) {
                            var dropdownType = tableData[0].DropdownType;
                            var DropDown_ID = dropdownIds[dropdownType];
                            //$('#' + dropdownType + '_' + RowNumber).find("select").empty();

                            if (!DropDown_ID) {
                                console.error('Dropdown ID not found for dropdown type: ' + dropdownType);
                                return;
                            }

                            $('#' + dropdownType + '_' + RowNumber).removeClass('nodatatr');
                            $('#' + dropdownType + '_' + RowNumber).find("#" + DropDown_ID).empty().append($('<option></option>').attr('value', "").text("Select Option"));
                            $.each(tableData, function (index, option) {

                                //$("#" + + dropdownType + '_' + '1').find("#" + DropDown_ID).append($('<option></option>').attr('value', option.Code).text(option.Name));
                                $('#' + dropdownType + '_' + RowNumber).find("#" + DropDown_ID).append($('<option></option>').attr('value', option.Code).text(option.Name));
                            });
                        }

                    });

                    $("#PageLoader").hide();
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    $("#PageLoader").hide();
                }
            });
        }

        //Password confirmation
        $('#txtConfirmPassword').keyup(function () {
            var password = $('#txtPassword').val();
            var confirmPassword = $(this).val();

            if (password === confirmPassword) {
                $('#confirmPasswordContainer').removeClass('no-match');
            } else {
                $('#confirmPasswordContainer').addClass('no-match');
            }
        });

        // Hide remove button for the initial row
        $('#btnUserToSelerRemoveRow_1').hide();
        $('#btnSellerBillToMappingRemoveRow_1_BillTo_1').hide();
        $('#btnSellerToPartnerMappingRemoveRow_1_Partner_1').hide();
        $('#btnSubSellerMappingRemoveRow_1_SubSeller_1').hide();
        $('#btnSellerToTariffMappingRemoveRow_1_Tariff_1').hide();

        var selectFirstRowSeller = $("#selectSeller_1");
        selectFirstRowSeller.select2();

        var increamentno = 1;
        var rowCounter = 1;
        var mainbilltorowCounter = 1;
        var mainsubsellerrowCounter = 1;
        var mainpartnerrowCounter = 1;
        var maintariffrowCounter = 1;
        var totalRows = 1;

        function AddOrEditUserSeller() {
            var rowCount = $('#tblUserToSeller tbody tr').length;
            //var subRowCount = $('#tblSellerBillToMapping tbody tr').length;

            const newRow = $('#usertoseller_0').clone();
            const BillToRow = $('#BillTo_0').clone();
            const SubSellerRow = $('#SubSeller_0').clone();
            const PartnerRow = $('#Partner_0').clone();
            const TariffRow = $('#Tariff_0').clone();
            var idNoForFirstSubRowBillTo = 0;
            var idNoForFirstSubRowPartnerTo = 0;
            var idNoForFirstSubRowSubSellerTo = 0;
            var idNoForFirstSubRowTariffTo = 0;


            // Increment the row counter
            rowCounter += increamentno;
            mainbilltorowCounter += increamentno;
            mainsubsellerrowCounter += increamentno;
            mainpartnerrowCounter += increamentno;
            maintariffrowCounter += increamentno;
            totalRows += 1;




            idNoForFirstSubRowBillTo += 1;
            idNoForFirstSubRowPartnerTo += 1;
            idNoForFirstSubRowSubSellerTo += 1;
            idNoForFirstSubRowTariffTo += 1;



            newRow.attr('class', 'usertosellerparent_' + rowCounter + ' usedforJson');
            newRow.find('[id^="toggleRowsBtn_"]').attr('id', 'toggleRowsBtn_' + rowCounter);
            newRow.attr('id', 'usertoseller_' + rowCounter);

            newRow.find('#usertoseller-row_0').text(totalRows);
            newRow.find('[id^="btnUserToSelerAddNewRow_"]').attr('id', 'btnUserToSelerAddNewRow_' + rowCounter);
            newRow.find('[id^="btnUserToSelerRemoveRow_"]').attr('id', 'btnUserToSelerRemoveRow_' + rowCounter);
            newRow.find('[id^="usertoseller-row_"]').attr('id', 'usertoseller-row_' + rowCounter);
            newRow.find('[id^="selectSeller_"]').attr('id', 'selectSeller_' + rowCounter).val('');
            newRow.find('[id^="selectSeller_"]').attr('class', ' getDataForJson');
            newRow.find('[id^="chkIsViewOrder_"]').attr('id', 'chkIsViewOrder_' + rowCounter).prop('checked', true);
            newRow.find('[id^="UTSM_ID_"]').attr('id', 'UTSM_ID_' + rowCounter).val('');

            newRow.find('[id^="chkIsCreateOrder_"]').attr('id', 'chkIsCreateOrder_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsGetQuote_"]').attr('id', 'chkIsGetQuote_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsFinancial_"]').attr('id', 'chkIsFinancial_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAdmin_"]').attr('id', 'chkIsAdmin_' + rowCounter).prop('checked', false);
            newRow.find('[id^="chkIsBlankSubSellerAllowed_"]').attr('id', 'chkIsBlankSubSellerAllowed_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAllSubSellerAllowed_"]').attr('id', 'chkIsAllSubSellerAllowed_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAllSubSellerAllowed_"]').attr('onchange', 'CheckShowRelatedSection(this, \'SubSeller\')');

            newRow.find('[id^="chkIsBlankPartnerAllowed_"]').attr('id', 'chkIsBlankPartnerAllowed_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAllPartnerAllowed_"]').attr('id', 'chkIsAllPartnerAllowed_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAllPartnerAllowed_"]').attr('onchange', 'CheckShowRelatedSection(this, \'Partner\')');

            newRow.find('[id^="chkIsBlankTariffAllowed_"]').attr('id', 'chkIsBlankTariffAllowed_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAllTariffAllowed_"]').attr('id', 'chkIsAllTariffAllowed_' + rowCounter).prop('checked', true);
            newRow.find('[id^="chkIsAllTariffAllowed_"]').attr('onchange', 'CheckShowRelatedSection(this, \'Tariff\')');
            newRow.css('display', 'table-row');


            // Append the new row to the table

            BillToRow.attr('class', 'usertosellerparent_' + rowCounter + ' usedforJson' + ' nodatatr')
            BillToRow.attr('id', 'BillTo_' + mainbilltorowCounter);
            BillToRow.find('#SellerBillToMapping_row_0_BillTo_0').text(1);
            // var nestedTable = BillToRow.find('#tblSellerToBillTo_1');
            BillToRow.find('#tblSellerToBillTo_0').attr('id', 'tblSellerToBillTo_' + mainbilltorowCounter);
            BillToRow.find('[id^="BillTo_0"]').attr('id', 'BillTo_' + mainbilltorowCounter);
            BillToRow.find('[id^="SellerBillToMapping_0_BillTo_0"]').attr('id', 'SellerBillToMapping_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter);
            BillToRow.find('[id^="btnSellerBillToMappingAddNewRow_"]').attr('id', 'btnSellerBillToMappingAddNewRow_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter);
            BillToRow.find('[id^="btnSellerBillToMappingAddNewRow_"]').attr('onclick', 'AddOrEditBillTo(this)');
            //BillToRow.find('[id^="btnSellerBillToMappingAddNewRow_' + mainbilltorowCounter + ']').attr('onclick', 'AddOrEditBillTo(tblSellerToBillTo_' + rowCounter + ')');
            BillToRow.find('[id^="btnSellerBillToMappingRemoveRow_"]').attr('id', 'btnSellerBillToMappingRemoveRow_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter);
            // BillToRow.find('[class^="btnSellerBillToMappingRemoveRow"]').hide().end()
            BillToRow.find('[id^="btnSellerBillToMappingRemoveRow_"]').attr('class', ' btnSellerBillToMappingRemoveRow_BillTo_' + mainbilltorowCounter);
            BillToRow.find('[id^="SellerBillToMapping_row"]').attr('id', 'SellerBillToMapping_row_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter);
            BillToRow.find('[id^="USTSBM_ID_"]').attr('id', 'USTSBM_ID_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter);
            BillToRow.find('[id^="SBTMSelectSeller_"]').attr('id', 'SBTMSelectSeller_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter).val('');
            BillToRow.find('[id^="chkSBTMIsViewOrder_"]').attr('id', 'chkSBTMIsViewOrder_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter).prop('checked', true);
            BillToRow.find('[id^="chkSBTMIsCreateOrder_"]').attr('id', 'chkSBTMIsCreateOrder_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter).prop('checked', true);
            BillToRow.find('[id^="chkSBTMIsGetQuote_"]').attr('id', 'chkSBTMIsGetQuote_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter).prop('checked', true);
            BillToRow.find('[id^="chkSBTMIsFinancial_"]').attr('id', 'chkSBTMIsFinancial_' + idNoForFirstSubRowBillTo + '_BillTo_' + rowCounter).prop('checked', true);
            BillToRow.css('display', 'table-row');
            BillToRow.find('[id^="btnSellerBillToMappingRemoveRow_"]').hide();

            //AppendPartner

            PartnerRow.attr('class', 'usertosellerparent_' + rowCounter + ' usedforJson' + ' nodatatr hidetr');
            PartnerRow.attr('id', 'Partner_' + mainpartnerrowCounter);
            //PartnerRow.find('#SellerToPartnerMapping-row_0').text(totalRows);
            PartnerRow.find('#SellerToPartnerMapping_row_0_Partner_0').text(1);
            //var partnerNestedTable = PartnerRow.find('#tblSellerToPartnerMapping_1');
            PartnerRow.find('#tblSellerToPartnerMapping_0').attr('id', 'tblSellerToPartnerMapping_' + mainpartnerrowCounter);
            PartnerRow.find('[id^="SellerToPartnerMapping_0_Partner_0"]').attr('id', 'SellerToPartnerMapping_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter);
            PartnerRow.find('[id^="Partner_0"]').attr('id', 'Partner_' + mainpartnerrowCounter);
            PartnerRow.find('[id^="btnSellerToPartnerMappingAddNewRow_"]').attr('id', 'btnSellerToPartnerMappingAddNewRow_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter);
            PartnerRow.find('[id^="btnSellerToPartnerMappingAddNewRow_"]').attr('onclick', 'AddOrEditPartnerTo(this)');
            PartnerRow.find('[id^="btnSellerToPartnerMappingRemoveRow_"]').attr('id', 'btnSellerToPartnerMappingRemoveRow_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter);
            PartnerRow.find('[id^="btnSellerToPartnerMappingRemoveRow_"]').attr('class', ' btnSellerToPartnerMappingRemoveRow_Partner_' + mainpartnerrowCounter);
            PartnerRow.find('[id^="SellerToPartnerMapping_row_"]').attr('id', 'SellerToPartnerMapping_row_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter);
            PartnerRow.find('[id^="STPMselectSeller_"]').attr('id', 'STPMselectSeller_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter).val('');
            PartnerRow.find('[id^="USTSPM_ID_"]').attr('id', 'USTSPM_ID_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter).text();
            PartnerRow.find('[id^="STPMchkisViewOrder_"]').attr('id', 'STPMchkisViewOrder_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter).prop('checked', true);
            PartnerRow.find('[id^="STPMchkisCreateOrder_"]').attr('id', 'STPMchkisCreateOrder_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter).prop('checked', true);
            PartnerRow.find('[id^="STPMchkisGetQuote_"]').attr('id', 'STPMchkisGetQuote_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter).prop('checked', true);
            PartnerRow.find('[id^="STPMchkIsFinancial_"]').attr('id', 'STPMchkIsFinancial_' + idNoForFirstSubRowPartnerTo + '_Partner_' + rowCounter).prop('checked', true);
            //PartnerRow.css('display', 'table-row');
            PartnerRow.find('[id^="btnSellerToPartnerMappingRemoveRow_"]').hide();


            //Append SubSeller
            SubSellerRow.attr('class', 'usertosellerparent_' + rowCounter + ' usedforJson' + ' nodatatr hidetr');
            SubSellerRow.attr('id', 'SubSeller_' + mainsubsellerrowCounter)
            SubSellerRow.find('#SellerToSubSellerMapping_row_0_SubSeller_0').text(1);
            //var SubSellerNestedTable = SubSellerRow.find('#tblSubSellerMapping_1');
            SubSellerRow.find('[id^="tblSubSellerMapping_0"]').attr('id', 'tblSubSellerMapping_' + mainsubsellerrowCounter);
            SubSellerRow.find('[id^="SubSellerMapping_"]').attr('id', 'SubSellerMapping_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter);
            SubSellerRow.find('[id^="btnSubSellerMappingAddNewRow_"]').attr('id', 'btnSubSellerMappingAddNewRow_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter);
            SubSellerRow.find('[id^="btnSubSellerMappingAddNewRow_"]').attr('onclick', 'AddOrEditSubSellerTo(this)');
            SubSellerRow.find('[id^="btnSubSellerMappingRemoveRow_"]').attr('id', 'btnSubSellerMappingRemoveRow_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter);
            SubSellerRow.find('[id^="btnSubSellerMappingRemoveRow_"]').attr('class', ' btnSubSellerMappingRemoveRow_SubSeller_' + mainsubsellerrowCounter);
            SubSellerRow.find('[id^="SellerToSubSellerMapping_row_"]').attr('id', 'SellerToSubSellerMapping_row_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter);
            SubSellerRow.find('[id^="SSMselectSeller_"]').attr('id', 'SSMselectSeller_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter).val('');
            SubSellerRow.find('[id^="USTSSM_ID_"]').attr('id', 'USTSSM_ID_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter).text();
            SubSellerRow.find('[id^="SSMchkIsViewOrder_"]').attr('id', 'SSMchkIsViewOrder_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter).prop('checked', true);
            SubSellerRow.find('[id^="SSMchkIsCreateOrder_"]').attr('id', 'SSMchkIsCreateOrder_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter).prop('checked', true);
            SubSellerRow.find('[id^="SSMchkIsGetQuote_"]').attr('id', 'SSMchkIsGetQuote_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter).prop('checked', true);
            SubSellerRow.find('[id^="SSMchkIsFinancial_"]').attr('id', 'SSMchkIsFinancial_' + idNoForFirstSubRowSubSellerTo + '_SubSeller_' + rowCounter).prop('checked', true);
            //SubSellerRow.css('display', 'table-row');
            SubSellerRow.find('[id^="btnSubSellerMappingRemoveRow_"]').hide();
            //Append Tarif

            TariffRow.attr('class', 'usertosellerparent_' + rowCounter + ' usedforJson' + ' nodatatr hidetr')
            TariffRow.attr('id', 'Tariff_' + maintariffrowCounter)
            TariffRow.find('#SelleToTariffMapping_row_0_Tariff_0').text(1);
            var tariffNestedTable = TariffRow.find('#tblSellerToTariffMapping');
            TariffRow.find('[id^="tblSellerToTariffMapping_0"]').attr('id', 'tblSellerToTariffMapping_' + maintariffrowCounter);
            TariffRow.find('[id^="SellerToTariffMapping_"]').attr('id', 'SellerToTariffMapping_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter);
            TariffRow.find('[id^="btnSellerToTariffMappingAddNewRow_"]').attr('id', 'btnSellerToTariffMappingAddNewRow_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter);
            TariffRow.find('[id^="btnSellerToTariffMappingAddNewRow_"]').attr('onclick', 'AddOrEditTariffTo(this)');
            TariffRow.find('[id^="btnSellerToTariffMappingRemoveRow_"]').attr('id', 'btnSellerToTariffMappingRemoveRow_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter);
            TariffRow.find('[id^="btnSellerToTariffMappingRemoveRow_"]').attr('class', ' btnSellerToTariffMappingRemoveRow_Tariff_' + maintariffrowCounter);
            TariffRow.find('[id^="SelleToTariffMapping_row"]').attr('id', 'SelleToTariffMapping_row_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter);
            TariffRow.find('[id^="USTSTM_ID_"]').attr('id', 'USTSTM_ID_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter).text();
            TariffRow.find('[id^="STTMSelectSeller_"]').attr('id', 'STTMSelectSeller_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter).val('');
            TariffRow.find('[id^="STTMchkIsViewOrder_"]').attr('id', 'STTMchkIsViewOrder_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter).prop('checked', true);
            TariffRow.find('[id^="STTMchkIsCreateOrder_"]').attr('id', 'STTMchkIsCreateOrder_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter).prop('checked', true);
            TariffRow.find('[id^="STTMchkIsGetQuote_"]').attr('id', 'STTMchkIsGetQuote_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter).prop('checked', true);
            TariffRow.find('[id^="STTMchkIsFinancial_"]').attr('id', 'STTMchkIsFinancial_' + idNoForFirstSubRowTariffTo + '_Tariff_' + rowCounter).prop('checked', true);
            //TariffRow.css('display', 'table-row');
            TariffRow.find('[id^="btnSellerToTariffMappingRemoveRow_"]').hide();

            $('#tblUserToSeller').append(newRow);
            $('#tblUserToSeller').append(BillToRow);
            $('#tblUserToSeller').append(PartnerRow);
            $('#tblUserToSeller').append(SubSellerRow);
            $('#tblUserToSeller').append(TariffRow);



            if (totalRows > 1) {
                $(".btnUserToSelerRemoveRow").show();
            }




            var selectSeller = $("#selectSeller_" + rowCounter);
            if (selectSeller.data('select2')) {
                selectSeller.select2('destroy');
            }

            selectSeller.select2();

        }
        function Remove_UserSellet_Row(imgElement) {
            var confirmed = confirm("Are you sure you want to remove this row?");
            if (!confirmed) {
                return; // Do nothing if the user cancels
            }

            var $anchorElement = $(imgElement).closest('a');
            var idParent = $anchorElement.attr('id');

            if ($("#" + idParent).prop("disabled")) {
                return;
            }
            $("#" + idParent).prop("disabled", true);

            var $closestTr = $anchorElement.closest('tr');
            var $serialNoTd = $closestTr.find('.txtSerialNo');
            var serialNoValue = $serialNoTd.find('span').text();

            // Remove the parent row
            $closestTr.remove();

            // Remove child rows associated with the parent
            var parentId = $closestTr.attr('class');
            $('#tblUserToSeller').find('[class^="' + parentId + '"]').remove();

            totalRows -= 1;

            if (totalRows <= 1) {
                $(".btnUserToSelerRemoveRow").hide();
            }

            resetRowNumbersForUserSeller(serialNoValue);
            $('#PageLoader').hide();
        }
        function resetRowNumbersForUserSeller(deletedId) {
            // Select all rows with IDs that start with 'claimdetail_'
            const rows = $('[id^="usertoseller-row_"]');
            //const rows = $('[id^="SellerBillToMapping_row_"]');

            for (let index = 0; index < rows.length; index++) {
                const currentId = parseInt(rows[index].id.split('_')[1]);
                if ($('#' + rows[index].id).text() !== '') {
                    const value = parseInt($('#' + rows[index].id).text());
                    if (value >= deletedId) {
                        //const newId = 'claimdetail-row_' + (value - 1);
                        const newId = (value - 1);
                        $('#' + rows[index].id).text(newId);
                        // Update the data-rowid attribute of the Delete button
                    }
                }
            }
        }
        function AddOrEditBillTo(element, putValue = false) {

            var rowBillToCount = $(element).closest('table').find('tbody tr').length;
            var parentBillToTrId = $(element).closest('table').closest('tr').attr('id');
            if (putValue === false) {

                var splitParentId = parentBillToTrId.split('_')[1];
                var findParentSelectID = $('#selectSeller_' + splitParentId).val();
                if (findParentSelectID == "" || findParentSelectID == null) {
                    toastr.error('Please first select the Seller from the User To Seller');
                    return;
                }
            }
            var newBillToRow = null;
            var sellerBillToMappingId = $(element).closest('[id^="SellerBillToMapping_"]').attr('id');
            var tableName = $(element).closest('[id^="tbl"]').attr('id');
            newBillToRow = $('#SellerBillToMapping_0_BillTo_0').clone(true, true); // Clone with data and events


            var findSrNo = findMaxTextInTd(tableName, 'SBTMItxtSerialNo');
            var billtorowCounter = 1;
            var getLastRowIdOfTable = $('#' + tableName).find('tbody tr:last').attr('id');
            var checkTheRowId = parseInt(getLastRowIdOfTable.split('_')[1]);
            billtorowCounter = checkTheRowId;

            if (putValue === false) {
                var selectSellerOptions = [];
                var selectedValueRow = $('#' + parentBillToTrId).find('#SBTMSelectSeller_' + billtorowCounter + '_' + parentBillToTrId).val();

                if (selectedValueRow == "" || selectedValueRow == null) {
                    toastr.error('Please select Bill To then create new row');
                    return;
                }


                $('#' + parentBillToTrId).find('#' + sellerBillToMappingId + ' [id^="SBTMSelectSeller_' + billtorowCounter + '_' + parentBillToTrId + '"] option').each(function () {
                    if (!selectSellerOptions.find(option => option.value === $(this).val())) {
                        selectSellerOptions.push({
                            value: $(this).val(),
                            text: $(this).text()
                        });
                    }
                });



                var selectedValues = [];

                // Find all select elements within the table with IDs starting with "SBTMSelectSeller_"
                $('#' + tableName + ' tr').each(function () {
                    var selectElement = $(this).find('select[id^="SBTMSelectSeller_"]');
                    if (selectElement.length > 0) {
                        var selectedValue = selectElement.val();
                        if (selectedValue !== "") {
                            selectedValues.push(selectedValue);
                        }
                    }
                });



                selectSellerOptions = selectSellerOptions.filter(option => !selectedValues.includes(option.value));

                if (selectedValues.length === 0) {
                    toastr.error('Please select Bill To then create new row');
                    return;
                }

                if (selectSellerOptions.length <= 1) {
                    toastr.error('Do not Map further');
                    return;
                }


            }


            findSrNo += 1;
            billtorowCounter += 1;



            //billtorowCounter += 1;
            // Store values and options of the first dropdown

            newBillToRow.attr('id', 'SellerBillToMapping_' + billtorowCounter + '_' + parentBillToTrId)
                .find('[id^="SellerBillToMapping_row_"]').attr('id', 'SellerBillToMapping_row_' + billtorowCounter + '_' + parentBillToTrId).text(findSrNo).end()
                //.find('#SellerBillToMapping-row_0').text(billtorowCounter).end()
                .find('[id^="btnSellerBillToMappingAddNewRow_"]').attr('id', 'btnSellerBillToMappingAddNewRow_' + billtorowCounter + '_' + parentBillToTrId).end()
                .find('[id^="btnSellerBillToMappingRemoveRow_"]').show().attr('id', 'btnSellerBillToMappingRemoveRow_' + billtorowCounter + '-' + parentBillToTrId).end()
                .find('[id^="btnSellerBillToMappingRemoveRow_"]').attr('class', ' btnSellerBillToMappingRemoveRow_' + parentBillToTrId).end()
                .find('[id^="USTSBM_ID_"]').attr('id', 'USTSBM_ID_' + billtorowCounter + '_' + parentBillToTrId).end()
                .find('[id^="SBTMSelectSeller_"]').attr('id', 'SBTMSelectSeller_' + billtorowCounter + '_' + parentBillToTrId).empty().end()
                .find('[id^="chkSBTMIsViewOrder_"]').attr('id', 'chkSBTMIsViewOrder_' + billtorowCounter + '_' + parentBillToTrId).prop('checked', true).end()
                .find('[id^="chkSBTMIsCreateOrder_"]').attr('id', 'chkSBTMIsCreateOrder_' + billtorowCounter + '_' + parentBillToTrId).prop('checked', true).end()
                .find('[id^="chkSBTMIsGetQuote_"]').attr('id', 'chkSBTMIsGetQuote_' + billtorowCounter + '_' + parentBillToTrId).prop('checked', true).end()
                .find('[id^="chkSBTMIsFinancial_"]').attr('id', 'chkSBTMIsFinancial_' + billtorowCounter + '_' + parentBillToTrId).prop('checked', true).end();

            if (putValue === false) {
                // Recreate options in the new dropdown
                var newSelect = newBillToRow.find('[id^="SBTMSelectSeller_' + billtorowCounter + '_' + parentBillToTrId + '"]');
                for (var i = 0; i < selectSellerOptions.length; i++) {
                    newSelect.append($('<option>', {
                        value: selectSellerOptions[i].value,
                        text: selectSellerOptions[i].text
                    }));
                }
            }


            newBillToRow.css('display', 'table-row');


            if (tableName == 'tblSellerToBillTo_1') {
                $('#tblSellerToBillTo_1 tbody').append(newBillToRow);
            } else {
                $('#' + tableName + ' tbody').append(newBillToRow);
            }



            if (rowBillToCount => 1) {
                //$('#btnSellerBillToMappingRemoveRow_1').show();
                $('.btnSellerBillToMappingRemoveRow_' + parentBillToTrId).show();
            }





        }
        function AddOrEditPartnerTo(element, putValueToRow = false) {


            var rowPartnerCount = $(element).closest('table').find('tbody tr').length;
            var parentPartnertoTrId = $(element).closest('table').closest('tr').attr('id');
            if (putValueToRow === false) {
                var splitParentId = parentPartnertoTrId.split('_')[1];
                var findParentSelectID = $('#selectSeller_' + splitParentId).val();
                if (findParentSelectID == "" || findParentSelectID == null) {
                    toastr.error('Please first select the Seller from the User To Seller');
                    return;
                }
            }
            var newPartnerToRow = null;
            var partnerToMappingId = $(element).closest('[id^="SellerToPartnerMapping_"]').attr('id');
            var partnerTableName = $(element).closest('[id^="tbl"]').attr('id');

            //console.log('SellerToPartnerMapping Id:', partnerToMappingId);

            newPartnerToRow = $('#SellerToPartnerMapping_0_Partner_0').clone(true, true); // Clone with data and events



            var findSrNo = findMaxTextInTd(partnerTableName, 'STPMtxtSerialNo');

            var getFirstRowIdOfTable = $('#' + partnerTableName).find('tbody tr:last').attr('id');
            var checkTheRowId = parseInt(getFirstRowIdOfTable.split('_')[1]);
            var partnertorowCounter = checkTheRowId;

            if (putValueToRow == false) {

                var selectedValueRow = $('#' + parentPartnertoTrId).find('#STPMselectSeller_' + partnertorowCounter + '_' + parentPartnertoTrId).val();

                if (selectedValueRow == "" || selectedValueRow == null) {
                    toastr.error('Please select Partner  then create new row');
                    return;
                }
                var selectSellerOptions = [];
                $('#' + parentPartnertoTrId).find('#' + partnerToMappingId + ' [id^="STPMselectSeller_' + partnertorowCounter + '_' + parentPartnertoTrId + '"] option').each(function () {
                    selectSellerOptions.push({
                        value: $(this).val(),
                        text: $(this).text()
                    });
                });
                var selectedValues = [];

                // Find all select elements within the table with IDs starting with "SBTMSelectSeller_"
                $('#' + partnerTableName + ' tr').each(function () {
                    // Find the <select> element within the current <tr> and with IDs starting with "SBTMSelectSeller_"
                    var selectElement = $(this).find('select[id^="STPMselectSeller_"]');
                    if (selectElement.length > 0) {
                        // Get the selected value of the <select> element
                        var selectedValue = selectElement.val();


                        if (selectedValue !== "") {
                            selectedValues.push(selectedValue);
                        }
                    }
                });


                selectSellerOptions = selectSellerOptions.filter(option => !selectedValues.includes(option.value));


                if (selectedValues.length === 0) {
                    toastr.error('Please select Partner  then create new row');
                    return;
                }

                if (selectSellerOptions.length <= 1) {
                    toastr.error('Do not Map further');
                    return;
                }
            }

            findSrNo += 1;
            partnertorowCounter += 1;






            newPartnerToRow.attr('id', 'SellerToPartnerMapping_' + partnertorowCounter + '_' + parentPartnertoTrId)
                .find('[id^="SellerToPartnerMapping_row_"]').attr('id', 'SellerToPartnerMapping_row_' + partnertorowCounter + '_' + parentPartnertoTrId).text(findSrNo).end()
                //.find('#SellerBillToMapping-row_0').text(partnertorowCounter).end()
                .find('[id^="btnSellerToPartnerMappingAddNewRow_"]').attr('id', 'btnSellerToPartnerMappingAddNewRow_' + partnertorowCounter + '_' + parentPartnertoTrId).end()
                .find('[id^="btnSellerToPartnerMappingRemoveRow_"]').attr('id', 'btnSellerToPartnerMappingRemoveRow_' + partnertorowCounter + '_' + parentPartnertoTrId).end()
                .find('[id^="btnSellerToPartnerMappingRemoveRow_"]').attr('class', ' btnSellerToPartnerMappingRemoveRow_' + parentPartnertoTrId).end()
                .find('[id^="USTSPM_ID_"]').attr('id', 'USTSPM_ID_' + partnertorowCounter + '_' + parentPartnertoTrId).text('').end()
                .find('[id^="STPMselectSeller_"]').attr('id', 'STPMselectSeller_' + partnertorowCounter + '_' + parentPartnertoTrId).empty().end()
                .find('[id^="STPMchkisViewOrder_"]').attr('id', 'STPMchkisViewOrder_' + partnertorowCounter + '_' + parentPartnertoTrId).prop('checked', true).end()
                .find('[id^="STPMchkisCreateOrder_"]').attr('id', 'STPMchkisCreateOrder_' + partnertorowCounter + '_' + parentPartnertoTrId).prop('checked', true).end()
                .find('[id^="STPMchkisGetQuote_"]').attr('id', 'STPMchkisGetQuote_' + partnertorowCounter + '_' + parentPartnertoTrId).prop('checked', true).end()
                .find('[id^="STPMchkIsFinancial_"]').attr('id', 'STPMchkIsFinancial_' + partnertorowCounter + '_' + parentPartnertoTrId).prop('checked', true).end();


            if (putValueToRow === false) {
                // Recreate options in the new dropdown
                var newSelect = newPartnerToRow.find('[id^="STPMselectSeller_' + partnertorowCounter + '_' + parentPartnertoTrId + '"]');
                for (var i = 0; i < selectSellerOptions.length; i++) {
                    newSelect.append($('<option>', {
                        value: selectSellerOptions[i].value,
                        text: selectSellerOptions[i].text
                    }));
                }
            }
            newPartnerToRow.css('display', 'table-row');

            if (partnerTableName == 'tblSellerToPartnerMapping') {
                $('#tblSellerToPartnerMapping tbody').append(newPartnerToRow);
            } else {
                $('#' + partnerTableName + ' tbody').append(newPartnerToRow);
            }



            if (rowPartnerCount >= 1) {
                $(".btnSellerToPartnerMappingRemoveRow_" + parentPartnertoTrId).show();
            }



        }
        function AddOrEditSubSellerTo(element, putValueToRow = false) {
            var rowSubSellerCount = $(element).closest('table').find('tbody tr').length;
            var parentSubSellertoTrId = $(element).closest('table').closest('tr').attr('id');
            if (putValueToRow === false) {
                var splitParentId = parentSubSellertoTrId.split('_')[1];
                var findParentSelectID = $('#selectSeller_' + splitParentId).val();
                if (findParentSelectID == "" || findParentSelectID == null) {
                    toastr.error('Please first select the Seller from the User To Seller');
                    return;
                }
            }
            var newSubSellerToRow = null;
            var subSellerMappingId = $(element).closest('[id^="SubSellerMapping_"]').attr('id');
            var subSellerTableName = $(element).closest('[id^="tbl"]').attr('id');

            newSubSellerToRow = $('#SubSellerMapping_0_SubSeller_0').clone(true, true); // Clone with data and events



            var findSrNo = findMaxTextInTd(subSellerTableName, 'SSMtxtSerialNo');

            var getFirstRowIdOfTable = $('#' + subSellerTableName).find('tbody tr:last').attr('id');
            var checkTheRowId = parseInt(getFirstRowIdOfTable.split('_')[1]);
            var subSellerRowCounter = checkTheRowId;

            if (putValueToRow === false) {
                var selectSellerOptions = [];

                var selectedValueRow = $('#' + parentSubSellertoTrId).find('#SSMselectSeller_' + subSellerRowCounter + '_' + parentSubSellertoTrId).val();

                if (selectedValueRow == "" || selectedValueRow == null) {
                    toastr.error('Please select SubSeller then create new row');
                    return;
                }

                $('#' + parentSubSellertoTrId).find('#' + subSellerMappingId + ' [id^="SSMselectSeller_' + subSellerRowCounter + '_' + parentSubSellertoTrId + '"] option').each(function () {
                    selectSellerOptions.push({
                        value: $(this).val(),
                        text: $(this).text()
                    });
                });

                var selectedValues = [];

                // Find all select elements within the table with IDs starting with "SBTMSelectSeller_"
                $('#' + subSellerTableName + ' tr').each(function () {
                    // Find the <select> element within the current <tr> and with IDs starting with "SBTMSelectSeller_"
                    var selectElement = $(this).find('select[id^="SSMselectSeller_"]');
                    if (selectElement.length > 0) {
                        // Get the selected value of the <select> element
                        var selectedValue = selectElement.val();


                        if (selectedValue !== "") {
                            selectedValues.push(selectedValue);
                        }
                    }
                });


                selectSellerOptions = selectSellerOptions.filter(option => !selectedValues.includes(option.value));

                if (selectedValues.length === 0) {
                    toastr.error('Please select SubSeller  then create new row');
                    return;
                }


                if (selectSellerOptions.length <= 1) {
                    toastr.error('Do not Map further');
                    return;
                }
            }


            findSrNo += 1;
            subSellerRowCounter += 1;

            newSubSellerToRow.attr('id', 'SubSellerMapping_' + subSellerRowCounter + '_' + parentSubSellertoTrId)
                .find('[id^="SellerToSubSellerMapping_row_"]').attr('id', 'SellerToSubSellerMapping_row_' + subSellerRowCounter + '_' + parentSubSellertoTrId).text(findSrNo).end()
                .find('[id^="btnSubSellerMappingAddNewRow_"]').attr('id', 'btnSubSellerMappingAddNewRow_' + subSellerRowCounter + '_' + parentSubSellertoTrId).end()
                .find('[id^="btnSubSellerMappingRemoveRow_"]').attr('id', 'btnSubSellerMappingRemoveRow_' + subSellerRowCounter + '_' + parentSubSellertoTrId).end()
                .find('[id^="btnSubSellerMappingRemoveRow_"]').attr('class', ' btnSubSellerMappingRemoveRow_' + parentSubSellertoTrId).end()
                .find('[id^="USTSSM_ID_"]').attr('id', 'USTSSM_ID_' + subSellerRowCounter + '_' + parentSubSellertoTrId).text('').end()
                .find('[id^="SSMselectSeller_"]').attr('id', 'SSMselectSeller_' + subSellerRowCounter + '_' + parentSubSellertoTrId).empty().end()
                .find('[id^="SSMchkIsViewOrder_"]').attr('id', 'SSMchkIsViewOrder_' + subSellerRowCounter + '_' + parentSubSellertoTrId).prop('checked', true).end()
                .find('[id^="SSMchkIsCreateOrder_"]').attr('id', 'SSMchkIsCreateOrder_' + subSellerRowCounter + '_' + parentSubSellertoTrId).prop('checked', true).end()
                .find('[id^="SSMchkIsGetQuote_"]').attr('id', 'SSMchkIsGetQuote_' + subSellerRowCounter + '_' + parentSubSellertoTrId).prop('checked', true).end()
                .find('[id^="SSMchkIsFinancial_"]').attr('id', 'SSMchkIsFinancial_' + subSellerRowCounter + '_' + parentSubSellertoTrId).prop('checked', true).end();

            if (putValueToRow === false) {
                // Recreate options in the new dropdown
                var newSelect = newSubSellerToRow.find('[id^="SSMselectSeller_' + subSellerRowCounter + '_' + parentSubSellertoTrId + '"]');
                for (var i = 0; i < selectSellerOptions.length; i++) {
                    newSelect.append($('<option>', {
                        value: selectSellerOptions[i].value,
                        text: selectSellerOptions[i].text
                    }));
                }
            }

            newSubSellerToRow.css('display', 'table-row');

            if (subSellerTableName == 'tblSubSellerMapping') {
                $('#tblSubSellerMapping tbody').append(newSubSellerToRow);
            } else {
                $('#' + subSellerTableName + ' tbody').append(newSubSellerToRow);
            }

            if (rowSubSellerCount >= 1) {
                $(".btnSubSellerMappingRemoveRow_" + parentSubSellertoTrId).show();
            }


        }
        function AddOrEditTariffTo(element, putValueToRow = false) {

            var rowTariffCount = $(element).closest('table').find('tbody tr').length;
            var parentTarifftoTrId = $(element).closest('table').closest('tr').attr('id');
            var splitParentId = parentTarifftoTrId.split('_')[1];
            if (putValueToRow === false) {
                var findParentSelectID = $('#selectSeller_' + splitParentId).val();
                if (findParentSelectID == "" || findParentSelectID == null) {
                    toastr.error('Please first select the Seller from the User To Seller');
                    return;
                }
            }
            var newTariffRow = null;
            var TariffMappingId = $(element).closest('[id^="SellerToTariffMapping_"]').attr('id');
            var tariffTableName = $(element).closest('[id^="tbl"]').attr('id');

            //console.log('subSellerMappingId Id:', TariffMappingId);

            newTariffRow = $('#SellerToTariffMapping_0_Tariff_0').clone(true, true); // Clone with data and events

            var findSrNo = findMaxTextInTd(tariffTableName, 'STTMtxtSerialNo');

            var getFirstRowIdOfTable = $('#' + tariffTableName).find('tbody tr:last').attr('id');
            var checkTheRowId = parseInt(getFirstRowIdOfTable.split('_')[1]);
            var tariffRowCounter = checkTheRowId;

            if (putValueToRow === false) {
                var selectSellerOptions = [];
                var selectedValueRow = $('#' + parentTarifftoTrId).find('#STTMSelectSeller_' + tariffRowCounter + '_' + parentTarifftoTrId).val();

                if (selectedValueRow == "" || selectedValueRow == null) {
                    toastr.error('Please select Tariff  then create new row');
                    return;
                }
                $('#' + parentTarifftoTrId).find('#' + TariffMappingId + ' [id^="STTMSelectSeller_' + tariffRowCounter + '_' + parentTarifftoTrId + '"] option').each(function () {
                    selectSellerOptions.push({
                        value: $(this).val(),
                        text: $(this).text()
                    });
                });

                var selectedValues = [];


                $('#' + tariffTableName + ' tr').each(function () {

                    var selectElement = $(this).find('select[id^="STTMSelectSeller_"]');
                    if (selectElement.length > 0) {

                        var selectedValue = selectElement.val();


                        if (selectedValue !== "") {
                            selectedValues.push(selectedValue);
                        }
                    }
                });


                selectSellerOptions = selectSellerOptions.filter(option => !selectedValues.includes(option.value));

                if (selectedValues.length === 0) {
                    toastr.error('Please select Tariff  then create new row');
                    return;
                }


                if (selectSellerOptions.length <= 1) {
                    toastr.error('Do not Map further');
                    return;
                }
            }

            findSrNo += 1;
            tariffRowCounter += 1;


            newTariffRow.attr('id', 'SellerToTariffMapping_' + tariffRowCounter + '_' + parentTarifftoTrId)
                .find('[id^="SelleToTariffMapping_row_"]').attr('id', 'SelleToTariffMapping_row_' + tariffRowCounter + '_' + parentTarifftoTrId).text(findSrNo).end()
                //.find('#SellerBillToMapping-row_0').text(partnertorowCounter).end()
                .find('[id^="btnSellerToTariffMappingAddNewRow_"]').attr('id', 'btnSellerToTariffMappingAddNewRow_' + tariffRowCounter + '_' + parentTarifftoTrId).end()
                .find('[id^="btnSellerToTariffMappingRemoveRow_"]').attr('id', 'btnSellerToTariffMappingRemoveRow_' + tariffRowCounter + '_' + parentTarifftoTrId).end()
                .find('[id^="btnSellerToTariffMappingRemoveRow_"]').attr('class', ' btnSellerToTariffMappingRemoveRow_' + parentTarifftoTrId).end()
                .find('[id^="USTSTM_ID_"]').attr('id', 'USTSTM_ID_' + tariffRowCounter + '_' + parentTarifftoTrId).text('').end()
                .find('[id^="STTMSelectSeller_"]').attr('id', 'STTMSelectSeller_' + tariffRowCounter + '_' + parentTarifftoTrId).empty().end()
                .find('[id^="STTMchkIsViewOrder_"]').attr('id', 'STTMchkIsViewOrder_' + tariffRowCounter + '_' + parentTarifftoTrId).prop('checked', true).end()
                .find('[id^="STTMchkIsCreateOrder_"]').attr('id', 'STTMchkIsCreateOrder_' + tariffRowCounter + '_' + parentTarifftoTrId).prop('checked', true).end()
                .find('[id^="STTMchkIsGetQuote_"]').attr('id', 'STTMchkIsGetQuote_' + tariffRowCounter + '_' + parentTarifftoTrId).prop('checked', true).end()
                .find('[id^="STTMchkIsFinancial_"]').attr('id', 'STTMchkIsFinancial_' + tariffRowCounter + '_' + parentTarifftoTrId).prop('checked', true).end();


            if (putValueToRow === false) {
                // Recreate options in the new dropdown
                var newSelect = newTariffRow.find('[id^="STTMSelectSeller_' + tariffRowCounter + '_' + parentTarifftoTrId + '"]');
                for (var i = 0; i < selectSellerOptions.length; i++) {
                    newSelect.append($('<option>', {
                        value: selectSellerOptions[i].value,
                        text: selectSellerOptions[i].text
                    }));
                }
            }

            newTariffRow.css('display', 'table-row');

            if (tariffTableName == 'tblSellerToTariffMapping') {
                $('#tblSellerToTariffMapping tbody').append(newTariffRow);
            } else {
                $('#' + tariffTableName + ' tbody').append(newTariffRow);
            }



            if (rowTariffCount => 1) {
                $(".btnSellerToTariffMappingRemoveRow_" + parentTarifftoTrId).show();
            }




        }
        function removeRow(imgElement, rowPrefix, buttonPrefix, serialNoClass) {

            var confirmed = confirm("Are you sure you want to remove this row?");
            if (!confirmed) {
                return; // Do nothing if the user cancels
            }

            if ($(imgElement).attr("disabled") == "disabled") {
                return;
            }
            $(imgElement).attr("disabled", "disabled");
            $('#PageLoader').show();

            // Find the parent table of the clicked button
            var $parentTable = $(imgElement).closest('table');
            const rowCount = $parentTable.find('[id^="' + rowPrefix + '"]').length;
            const firstRowRemoveButtonCount = $parentTable.find('[id^="' + buttonPrefix + '"]');
            var idOfFirstElement = firstRowRemoveButtonCount.eq(0).attr('id');

            // Find the parent row of the clicked button
            var $closestTr = $(imgElement).closest('tr');
            var $serialNoTd = $closestTr.find('.' + serialNoClass);
            var serialNoValue = $serialNoTd.find('span').text(); // Get the index of the row that was deleted

            // Remove the row from the parent table
            $closestTr.remove();
            var btnIds = $closestTr.find('[id^="' + buttonPrefix + '"]').map(function () {
                return this.id;
            }).get();
            if (rowCount <= 2) {
                if (btnIds != idOfFirstElement) {
                    $('#' + idOfFirstElement).hide();
                } else {
                    idOfFirstElement = firstRowRemoveButtonCount.eq(1).attr('id');
                    $('#' + idOfFirstElement).hide();
                }
            }

            // Update serial numbers of the remaining rows in the parent table
            resetRowNumbers($parentTable, rowPrefix, serialNoValue);

            $('#PageLoader').hide();
            $(imgElement).removeAttr("disabled");
        }
        function resetRowNumbers($table, rowPrefix, deletedId) {
            const rows = $table.find('[id^="' + rowPrefix + '"]');

            rows.each(function (index) {
                const currentId = parseInt($(this).attr('id').split('_')[2]);
                if ($(this).text() !== '' && currentId >= deletedId) {
                    const value = parseInt($(this).text());
                    if (value >= deletedId) {
                        const newId = value - 1;
                        $(this).text(newId);
                    }
                }
            });
        }

        function Remove_Tariff_Row(imgElement) {
            removeRow(imgElement, "SelleToTariffMapping_row_", "btnSellerToTariffMappingRemoveRow_", "STTMtxtSerialNo");
        }
        function Remove_SubSellerTo_Row(imgElement) {
            removeRow(imgElement, "SellerToSubSellerMapping_row_", "btnSubSellerMappingRemoveRow_", "SSMtxtSerialNo");
        }
        function Remove_PartnerTo_Row(imgElement) {
            removeRow(imgElement, "SellerToPartnerMapping_row_", "btnSellerToPartnerMappingRemoveRow_", "STPMtxtSerialNo");
        }
        function Remove_BillTo_Row(imgElement) {
            removeRow(imgElement, "SellerBillToMapping_row_", "btnSellerBillToMappingRemoveRow_", "SBTMItxtSerialNo");
        }

        function findMaxTextInTd(tableId, tdClass) {

            var maxInt = -Infinity;


            $('#' + tableId + ' td.' + tdClass).each(function () {

                var text = parseInt($(this).find('span').text().trim());

                if (!isNaN(text) && text > maxInt) {
                    maxInt = text;
                }
            });

            // Return the maximum integer found
            return maxInt;
        }
        var userName = "";
        var checkUserDetailsIsCopy = false;

        function GetUserDetails() {
            userName = $('#txtUserName').val().replace(/\s/g, '').toUpperCase();
            var NavUserName = $('#texNav').val().replace(/\s/g, '').toUpperCase();
            var RID = null;
            var checkRoleIsGroup = null;
            var roleValue = $('#Role').val();
            if (roleValue && roleValue.indexOf('|') !== -1) {
                var userRoles = roleValue.split('|');
                RID = userRoles[0]
                checkRoleIsGroup = userRoles[1];
            }
            var isGroupId;
            if (checkRoleIsGroup === "1") {
                isGroupId = true;
            } else if (checkRoleIsGroup === "0") {
                isGroupId = false;
            }

            var userID = parseInt($('#txtUserID').val());
            if (isNaN(userID)) {
                userID = 0;
            }

            var userData =
            {
                USER_ID: userID,
                UserType_MTV_CODE: $('#selectUserType').val(),
                USERNAME: userName,
                PasswordHash: $('#txtPassword').val(),
                PasswordSalt: $('#txtConfirmPassword').val(),
                R_ID: parseInt(RID),
                D_ID: parseInt($('#Department').val()),
                IsGroupRoleID: isGroupId,
                Designation: $('#txtDesignation').val(),
                FirstName: $('#txtFirstName').val(),
                MiddleName: $('#txtMiddleName').val(),
                LastName: $('#txtLastName').val(),
                Company: $('#txtCompany').val(),
                Address: $('#txtAddress1').val(),
                Address2: $('#txtAddress2').val(),
                Country: $('#txtCountry').val(),
                City: $('#txtCity').val(),
                State: $('#txtState').val(),
                ZipCode: $('#txtZipCode').val(),
                Email: $('#txtEmail').val(),
                Mobile: $('#txtMobile').val(),
                Phone: $('#txtPhone').val(),
                PhoneExt: $('#txtPhoneExt').val(),
                SecurityQuestion_MTV_ID: parseInt($('#selectQuestion').val()),
                EncryptedAnswer: $('#txtAnswer').val(),
                BlockType_MTV_ID: $('#selectBlockType').val() === '' ? 0 : parseInt($('#selectBlockType').val()),
                TIMEZONE_ID: parseInt($('#selectTimeZone').val()),
                IsApproved: $('#chkIsApproved').prop('checked'),
                IsAPIUser: $('#chkIsAPIUser').prop('checked'),
                IsActive: $('#chkIsActive').prop('checked'),
                ApplicationAccess: []
            };

            // Loop through each selected option in the multi-select dropdown
            $('#ApplicationAccess option:selected').each(function () {
                var UAAID = parseInt($('#UAA_ID_' + parseInt($(this).val())).text());
                if (isNaN(UAAID) || UAAID == null) {
                    UAAID = 0;
                }
                var ApplicationAccessData = {
                    UAA_ID: UAAID,
                    USERNAME: userName,
                    Application_MTV_ID: parseInt($(this).val()), // Get the value of the selected option
                    NAV_USERNAME: '',
                    IsActive: true
                };

                // Check if the selected option value is equal to 148103
                if (parseInt($(this).val()) === 148103) {

                    ApplicationAccessData.NAV_USERNAME = NavUserName;
                }

                userData.ApplicationAccess.push(ApplicationAccessData);
            });


            return userData;
        }
        function UserFormValidation(JsonData) {
            var returnValue = true;

            if (JsonData.USERNAME == '' || JsonData.USERNAME == null) {
                $('#txtUserName').addClass('is-invalid');
            } else {
                $('#txtUserName').removeClass('is-invalid');
            }

            if (JsonData.UserType_MTV_CODE == '' || JsonData.UserType_MTV_CODE == null) {
                $('#selectUserType').addClass('is-invalid');
            } else {
                $('#selectUserType').removeClass('is-invalid');
            }

            if (JsonData.PasswordHash == '' || JsonData.PasswordHash == null) {
                $('#txtPassword').addClass('is-invalid');
            } else {
                $('#txtPassword').removeClass('is-invalid');
            }

            if (JsonData.PasswordSalt == '' || JsonData.PasswordSalt == null) {
                $('#txtConfirmPassword').addClass('is-invalid');
            } else {
                $('#txtConfirmPassword').removeClass('is-invalid');
            }

            if (JsonData.D_ID === '' || JsonData.D_ID === null || isNaN(JsonData.D_ID)) {
                $('#Department').addClass('is-invalid');
            } else {
                $('#Department').removeClass('is-invalid');
            }

            if (JsonData.R_ID == '' || JsonData.R_ID == null || isNaN(JsonData.R_ID)) {
                $('#Role').addClass('is-invalid');
            } else {
                $('#Role').removeClass('is-invalid');
            }

            if (JsonData.SecurityQuestion_MTV_ID == '' || JsonData.SecurityQuestion_MTV_ID == null || isNaN(JsonData.SecurityQuestion_MTV_ID)) {
                $('#selectQuestion').addClass('is-invalid');
            } else {
                $('#selectQuestion').removeClass('is-invalid');
            }

            if (JsonData.EncryptedAnswer == '' || JsonData.EncryptedAnswer == null) {
                $('#txtAnswer').addClass('is-invalid');
            } else {
                $('#txtAnswer').removeClass('is-invalid');
            }

            if (JsonData.BlockType_MTV_ID == '' || JsonData.BlockType_MTV_ID == null || isNaN(JsonData.BlockType_MTV_ID)) {
                $('#selectBlockType').addClass('is-invalid');
            } else {
                $('#selectBlockType').removeClass('is-invalid');
            }

            if (JsonData.TIMEZONE_ID == '' || JsonData.TIMEZONE_ID == null || isNaN(JsonData.TIMEZONE_ID)) {
                $('#selectTimeZone').addClass('is-invalid');
            } else {
                $('#selectTimeZone').removeClass('is-invalid');
            }

            if (JsonData.Email == '' || JsonData.Email == null) {
                $('#txtEmail').addClass('is-invalid');
            } else {
                $('#txtEmail').removeClass('is-invalid');
            }

            if (JsonData.Designation == '' || JsonData.Designation == null) {
                $('#txtDesignation').addClass('is-invalid');
            } else {
                $('#txtDesignation').removeClass('is-invalid');
            }

            if (!JsonData.ApplicationAccessData) {
                for (var i = 0; i < JsonData.ApplicationAccess.length; i++) {
                    var currentAccess = JsonData.ApplicationAccess[i];
                    if (currentAccess.Application_MTV_ID === 148103 && (currentAccess.NAV_USERNAME === null || currentAccess.NAV_USERNAME === '')) {
                        $('#texNav').addClass('is-invalid');
                    } else {
                        $('#texNav').removeClass('is-invalid');
                    }
                }

            }

            if (!JsonData.USERNAME ||
                !JsonData.UserType_MTV_CODE ||
                !JsonData.PasswordHash ||
                !JsonData.PasswordSalt ||
                !JsonData.D_ID ||
                !JsonData.Designation ||
                !JsonData.SecurityQuestion_MTV_ID ||
                !JsonData.EncryptedAnswer ||
                !JsonData.TIMEZONE_ID ||
                !JsonData.Email ||
                !JsonData.BlockType_MTV_ID) {
                toastr.error('Please fill in all required fields.');
                returnValue = false;
            }


            if (!isValidEmail(JsonData.Email)) {

                toastr.error('Please enter a valid email address.');
                returnValue = false;
            }

            if (JsonData.USER_ID === undefined || JsonData.USER_ID === 0) {
                if (JsonData.PasswordHash !== JsonData.PasswordSalt) {
                    toastr.error('Password and Confirm Password do not match');
                    returnValue = false;
                }
                if (!isPasswordValid(JsonData.PasswordHash, 8)) {
                    toastr.error('Please Enter a Password with At least 1 Capital Letter, 1 Small Letter, 1 Special Character, 1 Number. Minimum Length 8 Characters.');
                    returnValue = false;
                }
            }
            return returnValue;
        }
        function isValidEmail(email) {
            // Regular expression for basic email validation
            const emailRegex = /[-0-9a-zA-Z.+_]+@@[-0-9a-zA-Z.+_]+\.[a-zA-Z]{2,4}/;
            return emailRegex.test(email);
        }
        function isPasswordValid(password, passwordlength) {
            const hasCapitalLetter = /[A-Z]/.test(password);
            const hasSmallLetter = /[a-z]/.test(password);
            const hasSpecialCharacter = /[!@@#$%^&*()_+{}[\]:;<>,.?~\\/\-=]/.test(password);
            const hasNumber = /\d/.test(password);
            const hasLength = password.length >= passwordlength;
            return hasCapitalLetter && hasSmallLetter && hasSpecialCharacter && hasNumber && hasLength;
        }

        function ValidatePassword(this_) {
            var isValidPassword = isPasswordValid(this_.value, 8);
            if (!isValidPassword) {
                $('#modalPassword').addClass('is-invalid');
            } else {
                $('#modalPassword').removeClass('is-invalid');
            }
        }
        function UserToSellerJson() {
            var fullData = [];
            if (userName == '') {
                toastr.error('Please Enter User Name First');
                return
            }

            $('#tblUserToSeller tbody tr[id^="usertoseller_"]').each(function (index, row) {
                var currentRow = $(row);
                var rowId = currentRow.attr('id');

                // Skip processing if rowId matches the excluded IDs
                if (!rowId || rowId.endsWith('_0') || rowId === 'Tariff_1' || rowId === 'SubSeller_1' || rowId === 'Partner_1' || rowId === 'BillTo_1') {
                    return; // Skip current iteration
                }
                var UTSMID = parseInt(currentRow.find('[id^="UTSM_ID_"]').text());
                if (isNaN(UTSMID)) {
                    UTSMID = 0;
                }
                // var sellerKey = SELLER_KEY: currentRow.find('[id^="selectSeller_"]').val();
                // if(sellerKey==null || sellerkey==''){
                //     toastr.error('Please Select the seller');
                //     return
                // }
                var userSellerData = {
                    //UserSellerId: currentRow.find('[id^="selectSeller_"]').val(),


                    UserToSeller: {
                        UTSM_ID: UTSMID,
                        UserName: userName,
                        SELLER_KEY: currentRow.find('[id^="selectSeller_"]').val(),
                        IsViewOrder: currentRow.find('[id^="chkIsViewOrder_"]').prop('checked'),
                        IsCreateOrder: currentRow.find('[id^="chkIsCreateOrder_"]').prop('checked'),
                        IsGetQuote: currentRow.find('[id^="chkIsGetQuote_"]').prop('checked'),
                        IsFinancial: currentRow.find('[id^="chkIsFinancial_"]').prop('checked'),
                        IsAdmin: currentRow.find('[id^="chkIsAdmin_"]').prop('checked'),
                        IsBlankSubSellerAllowed: currentRow.find('[id^="chkIsBlankSubSellerAllowed_"]').prop('checked'),
                        IsAllSubSellerAllowed: currentRow.find('[id^="chkIsAllSubSellerAllowed_"]').prop('checked'),
                        IsBlankPartnerAllowed: currentRow.find('[id^="chkIsBlankPartnerAllowed_"]').prop('checked'),
                        IsAllPartnerAllowed: currentRow.find('[id^="chkIsAllPartnerAllowed_"]').prop('checked'),
                        IsBlankTariffAllowed: currentRow.find('[id^="chkIsBlankTariffAllowed_"]').prop('checked'),
                        IsAllTariffAllowed: currentRow.find('[id^="chkIsAllTariffAllowed_"]').prop('checked'),
                        IsActive: true

                    },
                    BillTo: [],
                    PartnerTo: [],
                    SubSellerTo: [],
                    Tariff: []
                };

                // Add data for BillTo
                var nestedBillToTable = currentRow.next('tr.usedforJson').find('table');


                if (nestedBillToTable.length > 0) {
                    nestedBillToTable.find('tbody tr').each(function (index, billToRow) {
                        var SBM_ID_val = $(billToRow).find('[id^="SBTMSelectSeller_"]').val();
                        // Check if SBM_ID_val is not null, empty, or NaN
                        if (SBM_ID_val !== null && SBM_ID_val !== '') {
                            var USTSBMID = parseInt($(billToRow).find('[id^="USTSBM_ID_"]').text());
                            if (isNaN(USTSBMID)) {
                                USTSBMID = 0;
                            }
                            var billToData = {
                                USTSBM_ID: USTSBMID,
                                UserName: userName,
                                SBM_ID: parseInt(SBM_ID_val),
                                IsViewOrder: $(billToRow).find('[id^="chkSBTMIsViewOrder_"]').prop('checked'),
                                IsCreateOrder: $(billToRow).find('[id^="chkSBTMIsCreateOrder_"]').prop('checked'),
                                IsGetQuote: $(billToRow).find('[id^="chkSBTMIsGetQuote_"]').prop('checked'),
                                IsFinancial: $(billToRow).find('[id^="chkSBTMIsFinancial_"]').prop('checked'),
                                IsActive: true
                            };
                            userSellerData.BillTo.push(billToData);
                        }
                    });
                }



                var excludePartnerTo = userSellerData.UserToSeller.IsAllPartnerAllowed;
                var excludeSubSellerTo = userSellerData.UserToSeller.IsAllSubSellerAllowed;
                var excludeTariff = userSellerData.UserToSeller.IsAllTariffAllowed;
                // Add data for PartnerTo
                if (!excludePartnerTo) {
                    var nestedPartnerTable = currentRow.next('tr.usedforJson').next('tr.usedforJson').find('table');


                    if (nestedPartnerTable.length > 0) {
                        nestedPartnerTable.find('tbody tr').each(function (index, partnerRow) {

                            var SPM_ID_val = $(partnerRow).find('[id^="STPMselectSeller_"]').val();
                            if (SPM_ID_val !== null && SPM_ID_val !== '') {
                                var USTSPMID = parseInt($(partnerRow).find('[id^="USTSPM_ID_"]').text());
                                if (isNaN(USTSPMID)) {
                                    USTSPMID = 0;
                                }
                                var partnerData = {
                                    USTSPM_ID: USTSPMID,
                                    UserName: userName,
                                    SPM_ID: parseInt(SPM_ID_val),
                                    IsViewOrder: $(partnerRow).find('[id^="STPMchkisViewOrder_"]').prop('checked'),
                                    IsCreateOrder: $(partnerRow).find('[id^="STPMchkisCreateOrder_"]').prop('checked'),
                                    IsGetQuote: $(partnerRow).find('[id^="STPMchkisGetQuote_"]').prop('checked'),
                                    IsFinancial: $(partnerRow).find('[id^="STPMchkIsFinancial_"]').prop('checked'),
                                    IsActive: true
                                };
                                userSellerData.PartnerTo.push(partnerData);
                            }
                        });
                    }
                } else {
                    userSellerData.PartnerTo = null;
                }

                // Add data for SubSellerTo
                if (!excludeSubSellerTo) {
                    var nestedSubSellerTable = currentRow.next('tr.usedforJson').next('tr.usedforJson').next('tr.usedforJson').find('table');
                    if (nestedSubSellerTable.length > 0) {
                        nestedSubSellerTable.find('tbody tr').each(function (index, subSellerRow) {
                            var SSM_ID_val = $(subSellerRow).find('[id^="SSMselectSeller_"]').val();
                            if (SSM_ID_val !== null && SSM_ID_val !== '') {
                                var USTSSMID = parseInt($(subSellerRow).find('[id^="USTSSM_ID_"]').text());
                                if (isNaN(USTSSMID)) {
                                    USTSSMID = 0;
                                }
                                var subSellerData = {
                                    USTSSM_ID: USTSSMID,
                                    UserName: userName,
                                    SSM_ID: parseInt(SSM_ID_val),
                                    IsViewOrder: $(subSellerRow).find('[id^="SSMchkIsViewOrder_"]').prop('checked'),
                                    IsCreateOrder: $(subSellerRow).find('[id^="SSMchkIsCreateOrder_"]').prop('checked'),
                                    IsGetQuote: $(subSellerRow).find('[id^="SSMchkIsGetQuote_"]').prop('checked'),
                                    IsFinancial: $(subSellerRow).find('[id^="SSMchkIsFinancial_"]').prop('checked'),
                                    IsActive: true
                                };
                                userSellerData.SubSellerTo.push(subSellerData);
                            }
                        });
                    }
                } else {
                    userSellerData.SubSellerTo = null;
                }
                // Add data for Tariff
                if (!excludeTariff) {
                    var nestedTariffTable = currentRow.next('tr.usedforJson').next('tr.usedforJson').next('tr.usedforJson').next('tr.usedforJson').find('table');
                    if (nestedTariffTable.length > 0) {
                        nestedTariffTable.find('tbody tr').each(function (index, tariffRow) {
                            var STM_ID_val = $(tariffRow).find('[id^="STTMSelectSeller_"]').val();
                            if (STM_ID_val != null && STM_ID_val != '') {
                                var USTSTMID = parseInt($(tariffRow).find('[id^="USTSTM_ID_"]').text());
                                if (isNaN(USTSTMID)) {
                                    USTSTMID = 0;
                                }
                                var tariffData = {
                                    USTSTM_ID: USTSTMID,
                                    UserName: userName,
                                    STM_ID: parseInt(STM_ID_val),
                                    IsViewOrder: $(tariffRow).find('[id^="STTMchkIsViewOrder_"]').prop('checked'),
                                    IsCreateOrder: $(tariffRow).find('[id^="STTMchkIsCreateOrder_"]').prop('checked'),
                                    IsGetQuote: $(tariffRow).find('[id^="STTMchkIsGetQuote_"]').prop('checked'),
                                    IsFinancial: $(tariffRow).find('[id^="STTMchkIsFinancial_"]').prop('checked'),
                                    IsActive: true
                                };
                                userSellerData.Tariff.push(tariffData);
                            }
                        });
                    }
                } else {
                    userSellerData.Tariff = null;
                }




                fullData.push(userSellerData);
            });

            return fullData;
        }
        function ValidateSeller(jsonData) {
            var returnValueForSeller = true;
            for (var i = 0; i <= jsonData.length - 1; i++) {
                if (!jsonData[i].UserToSeller.SELLER_KEY || jsonData[i].UserToSeller.SELLER_KEY === '') {
                    toastr.error('Please select  Seller');

                    returnValueForSeller = false;

                }
            }
            return returnValueForSeller;
        }

        function AddOrEditUser() {
            var ObjJson = new Object();
            ObjJson.UserDetails = GetUserDetails();

            if (!UserFormValidation(ObjJson.UserDetails)) {
                return;
            }

            if (ObjJson.UserDetails.UserType_MTV_CODE === "CLIENT-USER") {
                //var userSeller = UserToSellerJson();
                ObjJson.UserSeller = UserToSellerJson();

                if (!ValidateSeller(ObjJson.UserSeller)) {
                    return;
                }

            }

            var JsonData = JSON.stringify(ObjJson);
            AddEditRemoveAjaxCommon(JsonData, "/Security/AddOrEdit_User", null, true, 'grid');
        }
        function ResetUserDeatils() {
            $('#txtUserID').val('');
            $('#txtUserName').val('');
            $('#selectUserType').val('');
            $('#txtPassword').val('');
            $('#txtConfirmPassword').val('');
            $('#confirmPasswordContainer').removeClass('no-match');
            $('#txtFirstName').val('');
            $('#txtMiddleName').val('');
            $('#txtLastName').val('');
            $('#txtDesignation').val('');
            $('#txtCompany').val('');
            $('#Department').val('');
            $('#Role').val('');
            $('#txtAddress1').val('');
            $('#txtAddress2').val('');
            $('#txtCountry').val('');
            $('#txtCity').val('');
            $('#txtState').val('');
            $('#txtZipCode').val('');
            $('#txtEmail').val('');
            $('#txtMobile').val('');
            $('#txtPhone').val('');
            $('#txtPhoneExt').val('');
            $('#selectQuestion').val('');
            $('#txtAnswer').val('');
            $('#selectBlockType').val('');
            $('#selectTimeZone').val('');
            $('#chkIsApproved').prop('checked', true);
            $('#chkIsAPIUser').prop('checked', false);
            $('#chkIsActive').prop('checked', true);
            $('#SelectBlokTypeDiv').addClass('hidden-column');
            $('#UserIdDiv').addClass('hidden-column');
            $('#texNavTextBox').addClass('navusername');
            $('#texNav').val('');

            //$('.SellerForm').hide();
            //$("#ApplicationAccess option:selected").prop('selected', false);
            $('#ApplicationAccess').val('').trigger('change');
            var UAAIDDivs = document.querySelectorAll('div.ApplicationAceesForUAAID');

            UAAIDDivs.forEach(function (div) {

                if (div.id != 'UAA_ID_0') {

                    div.remove();
                }
            });
        }
        function ResetUserToSeller() {
            RemoveDynamicallyRow();


            $('#selectSeller_1').val('').trigger('change');
            $('#chkIsViewOrder_1').prop('checked', true);
            $('#chkIsCreateOrder_1').prop('checked', true);
            $('#chkIsGetQuote_1').prop('checked', true);
            $('#chkIsFinancial_1').prop('checked', true);
            $('#chkIsAdmin_1').prop('checked', false);
            $('#chkIsBlankSubSellerAllowed_1').prop('checked', true);
            $('#chkIsAllSubSellerAllowed_1').prop('checked', true);
            $('#chkIsBlankPartnerAllowed_1').prop('checked', true);
            $('#chkIsAllPartnerAllowed_1').prop('checked', true);
            $('#chkIsBlankTariffAllowed_1').prop('checked', true);
            $('#chkIsAllTariffAllowed_1').prop('checked', true);

            $('#SBTMSelectSeller_1_BillTo_1').empty();
            $('#chkSBTMIsViewOrder_1_BillTo_1').prop('checked', true);
            $('#chkSBTMIsCreateOrder_1_BillTo_1').prop('checked', true);
            $('#chkSBTMIsGetQuote_1_BillTo_1').prop('checked', true);
            $('#chkSBTMIsFinancial_1_BillTo_1').prop('checked', true);

            // For the partner mapping row
            $('#STPMselectSeller_1_Partner_1').empty();
            $('#STPMchkisViewOrder_1_Partner_1').prop('checked', true);
            $('#STPMchkisCreateOrder_1_Partner_1').prop('checked', true);
            $('#STPMchkisGetQuote_1_Partner_1').prop('checked', true);
            $('#STPMchkIsFinancial_1_Partner_1').prop('checked', true);

            // For the sub-seller mapping row
            $('#SSMselectSeller_1_SubSeller_1').empty();
            $('#SSMchkIsViewOrder_1_SubSeller_1').prop('checked', true);
            $('#SSMchkIsCreateOrder_1_SubSeller_1').prop('checked', true);
            $('#SSMchkIsGetQuote_1_SubSeller_1').prop('checked', true);
            $('#SSMchkIsFinancial_1_SubSeller_1').prop('checked', true);

            // For the tariff mapping row
            $('#STTMSelectSeller_1_Tariff_1').empty();
            $('#STTMchkIsViewOrder_1_Tariff_1').prop('checked', true);
            $('#STTMchkIsCreateOrder_1_Tariff_1').prop('checked', true);
            $('#STTMchkIsGetQuote_1_Tariff_1').prop('checked', true);
            $('#STTMchkIsFinancial_1_Tariff_1').prop('checked', true);

            // Empty text for hidden columns
            $('#UTSM_ID_1, #USTSBM_ID_1_BillTo_1, #USTSPM_ID_1_Partner_1, #USTSSM_ID_1_SubSeller_1, #USTSTM_ID_1_Tariff_1').text('');
            $('#BillTo_1 ,#Partner_1, #SubSeller_1, #Tariff_1').addClass('nodatatr');

        }
        function RemoveDynamicallyRow() {
            var excludedIds = [
                "usertoseller_1", "BillTo_1", "Tariff_1", "SubSeller_1", "Partner_1",
                "usertoseller_0", "BillTo_0", "Tariff_0", "SubSeller_0", "Partner_0",
                "SellerToTariffMapping_1_Tariff_1", "SellerToTariffMapping_0_Tariff_0",
                "SubSellerMapping_1_SubSeller_1", "SubSellerMapping_0_SubSeller_0",
                "SellerToPartnerMapping_1_Partner_1", "SellerToPartnerMapping_0_Partner_0",
                "SellerBillToMapping_1_BillTo_1", "SellerBillToMapping_0_BillTo_0",
                "billtomainrow_1", "billtomainrow_0", "partnertomainrow_0", "partnertomainrow_1",
                , "subsellermainrow_1", "subsellermainrow_0", "tarifftomainrow_0", "tarifftomainrow_1"
                , "usertosellermainrow"
            ];

            $("#tblUserToSeller tr").each(function (index, element) {
                var rowId = $(element).attr("id");


                if (excludedIds.includes(rowId)) {
                    return true;
                }

                $(element).remove();
                increamentno = 1;
                rowCounter = 1;
                mainbilltorowCounter = 1;
                mainsubsellerrowCounter = 1;
                mainpartnerrowCounter = 1;
                maintariffrowCounter = 1;
                totalRows = 1;
            });
        }
        function ShowUserDetails(jsonData) {
            ResetUserDeatils();
            ResetUserToSeller();
            var jsonObject = $.parseJSON(jsonData);
            var userSeller = jsonObject.hasOwnProperty("UserSeller") && jsonObject.UserSeller.length > 0 ? jsonObject.UserSeller : null;
            var userDetails = jsonObject.hasOwnProperty("UserDetails") && jsonObject.UserDetails.length > 0 ? jsonObject.UserDetails[0] : null;
            if (userDetails != null) {
                $('#txtUserID').val(userDetails.USER_ID);
                $('#txtUserName').val(userDetails.USERNAME);
                $('#selectUserType').val(userDetails.UserType_MTV_CODE);
                //$('#txtPassword').val(userDetails.password);
                //$('#txtConfirmPassword').val(userDetails.confirmPassword);
                $('#txtFirstName').val(userDetails.FirstName);
                $('#txtMiddleName').val(userDetails.MiddleName);
                $('#txtLastName').val(userDetails.LastName);
                $('#txtDesignation').val(userDetails.Designation);
                $('#txtCompany').val(userDetails.Company);
                $('#Department').val(userDetails.D_ID);
                $('#Role').val(userDetails.R_ID);
                $('#txtAddress1').val(userDetails.Address);
                $('#txtAddress2').val(userDetails.Address2);
                $('#txtCountry').val(userDetails.Country);
                $('#txtCity').val(userDetails.City);
                $('#txtState').val(userDetails.State);
                $('#txtZipCode').val(userDetails.ZipCode);
                $('#txtEmail').val(userDetails.Email);
                $('#txtMobile').val(userDetails.Mobile);
                $('#txtPhone').val(userDetails.Phone);
                $('#txtPhoneExt').val(userDetails.PhoneExt);
                //$('#selectQuestion').val(userDetails.SecurityQuestion_MTV_ID);
                //$('#txtAnswer').val(userDetails.EncryptedAnswer);
                $('#selectBlockType').val(userDetails.BlockType_MTV_ID);
                $('#selectTimeZone').val(userDetails.TIMEZONE_ID);
                $('#chkIsApproved').prop('checked', userDetails.IsApproved);
                $('#chkIsAPIUser').prop('checked', userDetails.IsAPIUser);
                $('#chkIsActive').prop('checked', userDetails.IsActive);
                $('#SelectBlokTypeDiv').removeClass('hidden-column');
                $('#UserIdDiv').removeClass('hidden-column');

                if (userDetails.UserType_MTV_CODE === 'CLIENT-USER') {
                    $(".SellerForm").show();
                    $('#addorhideactive').addClass('active')
                }
                else {
                    $(".SellerForm").hide();
                    $('#addorhideactive').removeClass('active')
                }

                var applicationAccess = userDetails.ApplicationAccess;
                // for (int applicationCount; applicationCount < applicationAccess.length; applicationCount++) {

                // }
                var selectElement = $('#ApplicationAccess');
                $.each(applicationAccess, function (index, application) {
                    var uaaIdDiv = $('<div id="UAA_ID_' + application.Application_MTV_ID + '" class="hidden-column ApplicationAceesForUAAID"></div>');
                    $('#ApplicationHiddenMainDiv').append(uaaIdDiv)
                    selectElement.append('<option value="' + application.Application_MTV_ID + '" selected="selected">' + application.name + '</option>');
                    $('#UAA_ID_' + application.Application_MTV_ID).text(application.UAA_ID);
                    if (application.Application_MTV_ID === 148103) {
                        $('#texNavTextBox').removeClass('navusername');
                        $('#texNav').val(application.NAV_USERNAME);
                    }

                    if ($('#ApplicationAccess').data('select2')) {
                        $('#ApplicationAccess').select2('destroy');
                    }

                    $('#ApplicationAccess').select2();


                });




            }

            if (userSeller != undefined || userSeller != null) {

                for (var i = 0; i < userSeller.length; i++) {
                    var parentRowCount = i + 1;
                    var tableCount = i + 1;

                    var parentSelectValue = userSeller[i].SELLER_KEY;
                    var parentSelectText = userSeller[i].Name;
                    var parentSelectOption = $('<option>').val(parentSelectValue).text(parentSelectText);
                    $('#selectSeller_' + parentRowCount).append(parentSelectOption);
                    $('#selectSeller_' + parentRowCount + ' option[value="' + parentSelectValue + '"]').prop('selected', true);

                    //$('#selectSeller_' + a).val(userSeller[i].SELLER_KEY);
                    $('#UTSM_ID_' + parentRowCount).text(userSeller[i].UTSM_ID);
                    $('#chkIsCreateOrder_' + parentRowCount).prop('checked', userSeller[i].IsCreateOrder);
                    $('#chkIsGetQuote_' + parentRowCount).prop('checked', userSeller[i].IsGetQuote);
                    $('#chkIsFinancial_' + parentRowCount).prop('checked', userSeller[i].IsFinancial);
                    $('#chkIsAdmin_' + parentRowCount).prop('checked', userSeller[i].IsAdmin);
                    $('#chkIsViewOrder_' + parentRowCount).prop('checked', userSeller[i].IsViewOrder);
                    $('#chkIsBlankSubSellerAllowed_' + parentRowCount).prop('checked', userSeller[i].IsBlankSubSellerAllowed);
                    $('#chkIsAllSubSellerAllowed_' + parentRowCount).prop('checked', userSeller[i].IsAllSubSellerAllowed);
                    $('#chkIsBlankPartnerAllowed_' + parentRowCount).prop('checked', userSeller[i].IsBlankPartnerAllowed);
                    $('#chkIsAllPartnerAllowed_' + parentRowCount).prop('checked', userSeller[i].IsAllPartnerAllowed);
                    $('#chkIsBlankTariffAllowed_' + parentRowCount).prop('checked', userSeller[i].IsBlankTariffAllowed);
                    $('#chkIsAllTariffAllowed_' + parentRowCount).prop('checked', userSeller[i].IsAllTariffAllowed);




                    var BillToList = userSeller[i].BillTo;
                    if (BillToList != undefined || BillToList != null) {
                        if (BillToList.length > 0) {
                            $('#BillTo_' + parentRowCount).removeClass('nodatatr')
                            for (var billTo = 0; billTo < BillToList.length; billTo++) {
                                var billToCount = billTo + 1;
                                var tableRowCount = billToCount + 1;
                                var selectValue = BillToList[billTo].SBM_ID;
                                var selectText = BillToList[billTo].Name;
                                var selectOption = $('<option>').val(selectValue).text(selectText);
                                $('#tblSellerToBillTo_' + tableCount).find('#SBTMSelectSeller_' + billToCount + '_BillTo_' + parentRowCount).append(selectOption);
                                $('#tblSellerToBillTo_' + tableCount).find('#USTSBM_ID_' + billToCount + '_BillTo_' + parentRowCount).text(BillToList[billTo].USTSBM_ID)
                                $('#tblSellerToBillTo_' + tableCount).find('#SBTMSelectSeller_' + billToCount + '_BillTo_' + parentRowCount + ' option[value="' + selectValue + '"]').prop('selected', true);
                                $('#tblSellerToBillTo_' + tableCount).find('#chkSBTMIsViewOrder_' + billToCount + '_BillTo_' + parentRowCount).prop('checked', BillToList[billTo].IsViewOrder);
                                $('#tblSellerToBillTo_' + tableCount).find('#chkSBTMIsCreateOrder_' + billToCount + '_BillTo_' + parentRowCount).prop('checked', BillToList[billTo].IsCreateOrder);
                                $('#tblSellerToBillTo_' + tableCount).find('#chkSBTMIsGetQuote_' + billToCount + '_BillTo_' + parentRowCount).prop('checked', BillToList[billTo].IsGetQuote);
                                $('#tblSellerToBillTo_' + tableCount).find('#chkSBTMIsFinancial_' + billToCount + '_BillTo_' + parentRowCount).prop('checked', BillToList[billTo].IsFinancial);

                                if (billToCount != BillToList.length) {
                                    AddOrEditBillTo($('#btnSellerBillToMappingAddNewRow_' + billToCount + '_BillTo_' + tableCount), true);
                                }
                            }
                        }
                    }


                    var PartnerToList = userSeller[i].PartnerTo;
                    if (PartnerToList != undefined || PartnerToList != null) {
                        if (PartnerToList.length > 0) {
                            $('#Partner_' + parentRowCount).removeClass('nodatatr')
                            if (userSeller[i].IsAllPartnerAllowed === true) {
                                $('#Partner_' + parentRowCount).addClass('hidetr');


                            } else {
                                $('#Partner_' + parentRowCount).removeClass('hidetr');

                            }
                            for (var partnerto = 0; partnerto < PartnerToList.length; partnerto++) {
                                var partnerCount = partnerto + 1;
                                var selectValue = PartnerToList[partnerto].SPM_ID
                                var selectText = PartnerToList[partnerto].Name;
                                var selectOption = $('<option>').val(selectValue).text(selectText);
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#STPMselectSeller_' + partnerCount + '_Partner_' + parentRowCount).append(selectOption);
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#USTSPM_ID_' + partnerCount + '_Partner_' + parentRowCount).text(PartnerToList[partnerto].USTSPM_ID)
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#STPMselectSeller_' + partnerCount + '_Partner_' + parentRowCount + ' option[value="' + selectValue + '"]').prop('selected', true);
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#STPMchkisViewOrder_' + partnerCount + '_Partner_' + parentRowCount).prop('checked', PartnerToList[partnerto].IsViewOrder);
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#STPMchkisCreateOrder_' + partnerCount + '_Partner_' + parentRowCount).prop('checked', PartnerToList[partnerto].IsCreateOrder);
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#STPMchkisGetQuote_' + partnerCount + '_Partner_' + parentRowCount).prop('checked', PartnerToList[partnerto].IsGetQuote);
                                $('#tblSellerToPartnerMapping_' + tableCount).find('#STPMchkIsFinancial_' + partnerCount + '_Partner_' + parentRowCount).prop('checked', PartnerToList[partnerto].IsFinancial);
                                if (partnerCount != PartnerToList.length) {
                                    AddOrEditPartnerTo($('#btnSellerToPartnerMappingAddNewRow_' + partnerCount + '_Partner_' + tableCount), true);
                                }
                            }
                        }
                    }



                    var SubSellerList = userSeller[i].SubSellerTo;
                    if (SubSellerList != undefined || SubSellerList != null) {
                        if (SubSellerList.length > 0) {
                            $('#SubSeller_' + parentRowCount).removeClass('nodatatr')
                            if (userSeller[i].IsAllSubSellerAllowed === true) {
                                $('#SubSeller_' + parentRowCount).addClass('hidetr');


                            } else {
                                $('#SubSeller_' + parentRowCount).removeClass('hidetr');

                            }
                            for (var subsellerto = 0; subsellerto < SubSellerList.length; subsellerto++) {
                                var subSellerCount = subsellerto + 1;
                                var selectValue = SubSellerList[subsellerto].SSM_ID;
                                var selectText = SubSellerList[subsellerto].Name;
                                var selectOption = $('<option>').val(selectValue).text(selectText);
                                $('#tblSubSellerMapping_' + tableCount).find('#SSMselectSeller_' + subSellerCount + '_SubSeller_' + parentRowCount).append(selectOption);
                                $('#tblSubSellerMapping_' + tableCount).find('#USTSSM_ID_' + subSellerCount + '_SubSeller_' + parentRowCount).text(SubSellerList[subsellerto].USTSSM_ID);
                                $('#tblSubSellerMapping_' + tableCount).find('#SSMselectSeller_' + subSellerCount + '_SubSeller_' + parentRowCount + ' option[value="' + selectValue + '"]').prop('selected', true);
                                $('#tblSubSellerMapping_' + tableCount).find('#SSMchkIsViewOrder_' + subSellerCount + '_SubSeller_' + parentRowCount).prop('checked', SubSellerList[subsellerto].IsViewOrder);
                                $('#tblSubSellerMapping_' + tableCount).find('#SSMchkIsCreateOrder_' + subSellerCount + '_SubSeller_' + parentRowCount).prop('checked', SubSellerList[subsellerto].IsCreateOrder);
                                $('#tblSubSellerMapping_' + tableCount).find('#SSMchkIsGetQuote_' + subSellerCount + '_SubSeller_' + parentRowCount).prop('checked', SubSellerList[subsellerto].IsGetQuote);
                                $('#tblSubSellerMapping_' + tableCount).find('#SSMchkIsFinancial_' + subSellerCount).prop('checked', SubSellerList[subsellerto].IsFinancial);
                                if (subSellerCount != SubSellerList.length) {
                                    AddOrEditSubSellerTo($('#btnSubSellerMappingAddNewRow_' + subSellerCount + '_SubSeller_' + tableCount), true);
                                }
                            }
                        }
                    }



                    var TariffList = userSeller[i].Tariff;
                    if (TariffList != undefined || TariffList != null) {
                        if (TariffList.length > 0) {
                            $('#Tariff_' + parentRowCount).removeClass('nodatatr')
                            for (var tariffto = 0; tariffto < TariffList.length; tariffto++) {
                                if (userSeller[i].IsAllSubSellerAllowed === true) {
                                    $('#Tariff_' + parentRowCount).addClass('hidetr');


                                } else {
                                    $('#Tariff_' + parentRowCount).removeClass('hidetr');

                                }

                                var tariffToCount = tariffto + 1;
                                var selectValue = TariffList[tariffto].STM_ID;
                                var selectText = TariffList[tariffto].Name;
                                var selectOption = $('<option>').val(selectValue).text(selectText);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#STTMSelectSeller_' + tariffToCount + '_Tariff_' + parentRowCount).append(selectOption);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#USTSTM_ID_' + tariffToCount + '_Tariff_' + parentRowCount).text(TariffList[tariffto].USTSTM_ID);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#STTMSelectSeller_' + tariffToCount + '_Tariff_' + parentRowCount + ' option[value="' + selectValue + '"]').prop('selected', true);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#STTMchkIsViewOrder_' + tariffToCount + '_Tariff_' + parentRowCount).prop('checked', TariffList[tariffto].IsViewOrder);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#STTMchkIsCreateOrder_' + tariffToCount + '_Tariff_' + parentRowCount).prop('checked', TariffList[tariffto].IsCreateOrder);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#STTMchkIsGetQuote_' + tariffToCount + '_Tariff_' + parentRowCount).prop('checked', TariffList[tariffto].IsGetQuote);
                                $('#tblSellerToTariffMapping_' + tableCount).find('#STTMchkIsFinancial_' + tariffToCount + '_Tariff_' + parentRowCount).prop('checked', TariffList[tariffto].IsFinancial);
                                if (subSellerCount != TariffList.length) {
                                    AddOrEditTariffTo($('#btnSellerToTariffMappingAddNewRow_' + tariffToCount + '_Tariff_' + tableCount), true);
                                }
                            }
                        }
                    }


                    if (parentRowCount != userSeller.length) {
                        AddOrEditUserSeller();
                    }

                }
            }
            if (checkUserDetailsIsCopy === true) {
                ResetCopyUserDetails();

            } else {
                checkUserDetailsIsCopy = false;
            }

        }

        $('#search').on('input', function () {
            var searchTerm = $(this).val().trim();
            if (searchTerm.length >= 3) {
                fetchUsernames(searchTerm);
            } else {
                $('#username-list').empty();
            }
        });
        function fetchUsernames(SearchTerm) {
            GetResponseAjaxCommon(SearchTerm, "/Security/GetUserNameListForSearch", displayUsernames);
        }
        function displayUsernames(usernames) {
            $('#username-list').empty(); // Clear popup list

            if (usernames.length === 0) {
                $('#username-list').html('<p>No usernames found.</p>');
                return;
            }
            if (usernames.ReturnCode === false) {
                $('#username-list').html('<p>No usernames found.</p>');
                return;
            }

            var ul = $('<ul>').addClass('username-popup');

            // Add a class to apply scroll bar if the list exceeds 10 items
            if (usernames.length > 10) {
                ul.addClass('scrollable');
            }

            $.each(usernames, function (index, username) {
                var li = $('<li>').attr('data-user-id', username.Eny_UserID).text(username.USERNAME);
                ul.append(li);

                li.on('click', handleUsernameClick);
            });
            $('#username-list').append(ul);
        }
        $(document).on('click', '.username-popup li', function () {
            $('#search').val(''); // Set the value of the search input to the clicked username
            $('#username-list').empty(); // Clear popup list
        });
        function handleUsernameClick() {
            var userId = $(this).attr('data-user-id');
            var username = $(this).text();
            var isValueInUser = checkUserDetailsHasValues()
            if (isValueInUser === true) {
                var confirmation = confirm("Are you sure to copy the user '" + username + "'?");

                if (confirmation) {

                    GetAddEditUserSetupModal(userId, "Add");
                }
            } else {
                GetAddEditUserSetupModal(userId, "Add");
            }


        }

        function ResetCopyUserDetails() {
            $('#txtUserID').val('');
            $('#txtUserName').val('');
            $('#UserIdDiv').addClass('hidden-column');
            $('#txtPassword').val('');
            $('#txtConfirmPassword').val('');
            $('#txtFirstName').val('');
            $('#txtMiddleName').val('');
            $('#txtLastName').val('');
            $('#selectQuestion').val('');
            $('#txtAnswer').val('');
            $('#selectQuestion').val('');
            $('#txtEmail').val('');
            $('[id^="UTSM_ID_"], [id^="USTSBM_ID_"], [id^="USTSPM_ID_"], [id^="USTSSM_ID_"], [id^="USTSTM_ID_"] ,[id^="UAA_ID"]').text('');

        }
        function GetAddEditUserSetupModal(UserID, FormType) {

            if (FormType === 'Add' && UserID != '') {
                $("#AddOrEddButton").text("Add")
                checkUserDetailsIsCopy = true;

                GetResponseAjaxCommon(UserID, "/Security/GetUserDetails", ShowUserDetails);
            } else if (FormType === 'Add') {

                $("#AddOrEddButton").text("Add")
                $('#selectBlockType').val('149100');
            }
            else {
                if (UserID != '') {
                    $("#AddOrEddButton").text("Edit");
                    checkUserDetailsIsCopy = false;
                    GetResponseAjaxCommon(UserID, "/Security/GetUserDetails", ShowUserDetails);
                }
            }
            $("body").addClass("modal-open");
            $('#User_Form_Modal').show();
            $('#User_Form_Modal').modal({
                backdrop: false
            });
            $('#User_Form_Modal').modal('show');

        }
        function ResetModal() {

            var isValueForUser = checkUserDetailsHasValues();
            if (isValueForUser === true) {
                var confirmationMessageForReset = confirm("Are you sure to reset current details?");

                if (confirmationMessageForReset) {
                    $('#addorhideactive').removeClass('active')
                    $(".SellerForm").hide();
                    ResetUserDeatils();
                    ResetUserToSeller();
                }
            }

        }
        function checkUserDetailsHasValues() {
            var hasUserValues = false;
            var userData = GetUserDetails();
            delete userData.BlockType_MTV_ID;
            delete userData.IsApproved;
            delete userData.IsActive;
            delete userData.IsAPIUser;
            for (var key in userData) {
                var userPropertyValue = String(userData[key]);
                if (userData.hasOwnProperty(key) && userPropertyValue !== null && userPropertyValue !== undefined && userPropertyValue !== '' && userPropertyValue !== "0" && userPropertyValue !== "NaN" && userPropertyValue !== "undefined") {
                    hasUserValues = true;
                    return hasUserValues;
                }
            }


            return hasUserValues;
        }
        function closeAndResetModal() {
            $('#addorhideactive').removeClass('active')
            $(".SellerForm").hide();
            ResetUserDeatils();
            ResetUserToSeller();
        }
        //User ************************************************************* End */

        function onCustomFilterValidate(id, IsRun, IsClearFilter) {
            var resultjson = { issuccess: false, customfilterjson: [] };
            resultjson = onCustomFilter(false, id);
            if (resultjson.issuccess) {
                var grid = $("#" + id).data("kendoGrid");
                if (grid == undefined && IsRun == false) {
                    return;
                }
                else if (IsRun == true && grid == undefined) {
                    if (id == "grid") {
                        PageGroupGridLoad();
                        return;
                    }
                    else if (id == "grid1") {
                        PageGridLoad();
                        return;
                    }
                }

                if (IsClearFilter == true) {
                    ResetGridFilter(id);
                    return;
                }
                else {
                    RefreshGridData(id);
                    return;
                }
            }
        }
        var lastcustomreportFilterObjectList = [];
        function onCustomFilter(IsGetLastSaved, id) {

            IsGetLastSaved = (IsGetLastSaved == undefined ? false : IsGetLastSaved);
            var customreportFilterObjectList = [];
            var resultjson = { issuccess: false, customfilterjson: customreportFilterObjectList };
            var reportFilterObject = { code: "", name: "", isFilterApplied: false, reportFilterObjectArry: [] };
            var filterobject = new Object();

            var specificreportFilterObjectList = [];
            var specificreportFilterObject = { code: "", name: "", isFilterApplied: false, reportFilterObjectArry: [] };
            var specificfilterobject = new Object();

            if (IsGetLastSaved) {
                if (lastcustomreportFilterObjectList.length > 0) {
                    for (var i = 0; i <= lastcustomreportFilterObjectList.length - 1; i++) {
                        if (lastcustomreportFilterObjectList[i].id == id) {
                            resultjson = { issuccess: true, customfilterjson: lastcustomreportFilterObjectList[i].customfilterjson };
                            return resultjson;
                        }
                    }
                }
            }

            if ($('#txtdate').val() != "" && $('#txtenddate').val() != "") {
                SetCustomFilterValue(customreportFilterObjectList, reportFilterObject, filterobject, "and", $('#txtdate').val(), KendoGridFilterType.isequalorgreather, KendoFilterTypes.Date, SRVTypes.Date, false, 0, "Created_On_Date", "Created_On_Date", false);
                SetCustomFilterValue(customreportFilterObjectList, reportFilterObject, filterobject, "and", $('#txtenddate').val(), KendoGridFilterType.isequalorless, KendoFilterTypes.Date, SRVTypes.Date, false, 0, "Created_On_Date", "Created_On_Date", true);

                onSpecificFilter(id, specificreportFilterObjectList, specificreportFilterObject, specificfilterobject, "and", $('#txtdate').val()
                    , KendoGridFilterType.isequalorgreather, KendoFilterTypes.Date, SRVTypes.Date, false, 0, "Created_On_Date", "Created_On_Date", false);
                onSpecificFilter(id, specificreportFilterObjectList, specificreportFilterObject, specificfilterobject, "and", $('#txtenddate').val()
                    , KendoGridFilterType.isequalorless, KendoFilterTypes.Date, SRVTypes.Date, false, 0, "Created_On_Date", "Created_On_Date", true);
            }

            if ($('#txtOrigHub').val() != "") {
                SetCustomFilterValue(customreportFilterObjectList, reportFilterObject, filterobject, "and", $('#txtOrigHub').val(), KendoGridFilterType.inlistfilter, KendoFilterTypes.String, SRVTypes.UpperString, false, 0, "OrigHub", "OrigHub", false);
            }

            if (specificreportFilterObjectList.length > 0) {
                for (var i = 0; i < specificreportFilterObjectList.length; i++) {
                    customreportFilterObjectList.push(specificreportFilterObjectList[i]);
                }
            }

            if (lastcustomreportFilterObjectList.length > 0) {
                for (var i = 0; i <= lastcustomreportFilterObjectList.length - 1; i++) {
                    if (lastcustomreportFilterObjectList[i].id == id) {
                        resultjson = { issuccess: true, customfilterjson: lastcustomreportFilterObjectList[i].customfilterjson };
                        break;
                    }
                }
            }

            var isexistscustomfilterjson = false;
            if (lastcustomreportFilterObjectList.length > 0) {
                for (var i = 0; i <= lastcustomreportFilterObjectList.length - 1; i++) {
                    if (lastcustomreportFilterObjectList[i].id == id) {
                        var lastcustomreportFilterObject = new Object();
                        lastcustomreportFilterObject.id = id;
                        lastcustomreportFilterObject.customfilterjson = customreportFilterObjectList;
                        lastcustomreportFilterObjectList[i] = lastcustomreportFilterObject;
                        isexistscustomfilterjson = true;
                        break;
                    }
                }
            }
            if (isexistscustomfilterjson == false) {
                var lastcustomreportFilterObject = new Object();
                lastcustomreportFilterObject.id = id;
                lastcustomreportFilterObject.customfilterjson = customreportFilterObjectList;
                lastcustomreportFilterObjectList.push(lastcustomreportFilterObject);
            }

            resultjson = { issuccess: true, customfilterjson: customreportFilterObjectList };

            return resultjson;
        }
        function onSpecificFilter(id, specificreportFilterObjectList, specificreportFilterObject, specificfilterobject, logic, value, filtertype, fieldtype, srvfieldtype, islist, listtype, code, name, isprevioussamecode, isgridfilter = false) {
            if (code == 'Created_On_Date' && isgridfilter == false) {
                var dateObject = new Date(value)
                dateObject.setDate(dateObject.getDate() + (isprevioussamecode == false ? -1 : 1));
                var newvalue = formatDateToDateTime(dateObject, false);
                SetCustomFilterValue(specificreportFilterObjectList, specificreportFilterObject, specificfilterobject, logic, newvalue, filtertype, fieldtype, srvfieldtype, islist, listtype, "UTC_Created_On_Date", "UTC_Created_On_Date", isprevioussamecode);
            }
            else if (code == 'Created_On_Date' && isgridfilter == true) {
                var dateObject = new Date(value)
                dateObject.setDate(dateObject.getDate() - 1);
                var newvalue = formatDateToDateTime(dateObject, false);
                SetCustomFilterValue(specificreportFilterObjectList, specificreportFilterObject, specificfilterobject, logic, newvalue, KendoGridFilterType.isequalorgreather, fieldtype, srvfieldtype, islist, listtype, "UTC_Created_On_Date", "UTC_Created_On_Date", isprevioussamecode);

                dateObject = new Date(value)
                dateObject.setDate(dateObject.getDate() + 1);
                newvalue = formatDateToDateTime(dateObject, false);
                SetCustomFilterValue(specificreportFilterObjectList, specificreportFilterObject, specificfilterobject, logic, newvalue, KendoGridFilterType.isequalorless, fieldtype, srvfieldtype, islist, listtype, "UTC_Created_On_Date", "UTC_Created_On_Date", true);
            }
        }
        function onReset() {
            $("#PageLoader").show();
            $('#txtdate').val($("#originalstartdate").val());
            $('#txtOrigHub').html($("#hublist").html());
            $('#txtClientID').html($("#clientlist").html())
            $("#PageLoader").hide();
            onCustomFilterValidate('grid', false, true)
        }
    </script>
}
